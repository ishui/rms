<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.WebUI.UltraWebCalcManager.v5.1</name>
    </assembly>
    <members>
        <member name="T:Infragistics.WebUI.CalcEngine.UCCompilation">
            <summary>
            UCCompliation represents a compiled formula.  It encapsulates the formula parser and is responsible
            for formula parsing.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.baseRef">
            <summary>
            Storage for the context reference where the formula is stored.  Used to create references found in the
            formula.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.formula">
            <summary>
            Storage for the string representation of the formula.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.error">
            <summary>
            Storage for the last compilation error message.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.parsedNode">
            <summary>
            Storage for the root of the parse tree.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.tokens">
            <summary>
            Storage for the formula tokens.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UCCompilation.functionFactory">
            <summary>
            Storage for the UltraCalcFunctionFactory instance used to create function calls.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.#ctor">
            <summary>
            Constructor with default function factory.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory)">
            <summary>
            Constructor with a specified function factory.
            </summary>
            <param name="functionFactory">The function factory used to construct function calls.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.Parse(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String)">
            <summary>
            Parse the formula into a parse tree.  Initializes the FormulaString and RootNode properties.
            </summary>
            <param name="baseReference">The context reference where the formula is stored.</param>
            <param name="formula">The formula to parse.</param>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.Tokenize">
            <summary>
            Converts the parsed formula into tokenized form.  Parse must be called first.
            <see cref="M:Infragistics.WebUI.CalcEngine.UCCompilation.Parse(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String)"/>
            </summary>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.DoPostfixNode(PerCederberg.Grammatica.Parser.Node,Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection)">
            <summary>
            Recursive function used by Tokenize to walk the parse tree and generate the formula tokens.
            </summary>
            <param name="n">The current node being evaluated.</param>
            <param name="tokens">The formula token collection to append to.</param>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.DoTermLoop(Infragistics.WebUI.CalcEngine.UCparserConstants,PerCederberg.Grammatica.Parser.Node,Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection)">
            <summary>
            Function used by DoPostfixNode to extract a collection of terms from the parse tree.
            </summary>
            <param name="termID">The term identifier.</param>
            <param name="n">The root node of the term collection.</param>
            <param name="tokens">The formula token collection to append to.</param>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.DoOpNode(PerCederberg.Grammatica.Parser.Node,Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection)">
            <summary>
            Function used by DoPostfixNode to extract an Operator from the parse tree.
            </summary>
            <param name="n">The operator node.</param>
            <param name="tokens">The formula token collection to append to.</param>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.ConcatChildren(PerCederberg.Grammatica.Parser.Node)">
            <summary>
            Function used by DoPostfixNode to concatenate a collection of nodes.
            <param name="n">The root node to concatenate.</param>
            <returns>true if successful, otherwise Error contains compilation error message</returns>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCCompilation.CountFuncArgs(PerCederberg.Grammatica.Parser.Node)">
            <summary>
            Function used by DoPostfixNode to determine the number of function arguments for a function.
            <param name="n">The function node.</param>
            <returns>the argument count.</returns>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCCompilation.FormulaString">
            <summary>
            Return the string representation of the formula.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCCompilation.HasAlwaysDirty">
            <summary>
            Denotes whether the formula contains an always dirty function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCCompilation.Tokens">
            <summary>
            Return the collection of tokens for the parsed formula. Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCCompilation.Error">
            <summary>
            Return the last compilation error message.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCCompilation.RootNode">
            <summary>
            Return the root of the parse tree.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction">
            <summary>
            Enumeration of operator functions.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Add">
            <summary>
            Operator used to add two values. ("+")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Subtract">
            <summary>
            Operator used to subtract two values. ("-")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Multiply">
            <summary>
            Operator used to multiply two values. ("*")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Divide">
            <summary>
            Operator used to divide two values. ("/")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Equal">
            <summary>
            Operator used to compare two objects for equality. ("=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.NotEqual">
            <summary>
            Operator used to compare if two values are different. ("&gt;&lt;" or "!=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.GreaterThanOrEqual">
            <summary>
            Operator used to determine if one value is greater than or equal to a second value. ("&gt;=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.GreaterThan">
            <summary>
            Operator used to determine if one value is greater than a second value. ("&gt;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.LessThanOrEqual">
            <summary>
            Operator used to determine if one value is less than or equal to a second value. ("&lt;=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.LessThan">
            <summary>
            Operator used to determine if one value is less than a second value. ("&lt;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Concatenate">
            <summary>
            Operator used to concatenate 2 strings. ("&amp;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Exponent">
            <summary>
            Operator used to raise a value to a specified power. ("^")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.Percent">
            <summary>
            Operator used to convert a value to a percentage. ("%")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.UnaryMinus">
            <summary>
            Negative unary operator. ("-")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction.UnaryPlus">
            <summary>
            Positive unary operator. ("+")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus"/>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor">
            <summary>
            Describes a function table entry and provides methods to access information about the function's arguments.
            </summary>
            <remarks>
            <p class="body">
            See the <b>UCFunctionFactory</b> class for methods to return <B>UltraCalcFunctionDescriptor</B> from a function's name
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.name">
            <summary>
            Storage for function name
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.minArgs">
            <summary>
            Storage for the minimum number of function arguments
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.maxArgs">
            <summary>
            Storage for the maximum number of function arguments
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.type">
            <summary>
            Storage for the system type of the function used to instaniate it
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.category">
            <summary>
            Storage for the function category
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.description">
            <summary>
            Storage for the function's summary description
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.argList">
            <summary>
            Storage for the list of function arguments
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.argDescriptors" -->
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.userDefinedFunction">
            <summary>
            Denotes whether the function is a user defined function
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.alwaysDirty">
            <summary>
            Denotes whether the function is an always dirty function
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.#ctor(System.String,System.Int32,System.Int32,System.Type,System.String,System.String,System.String[],System.String[],System.Boolean,System.Boolean)">
            <summary>
            Formula function decriptor providing methods and properties to define and access functions
            </summary>
            <param name="name">Function Name</param>
            <param name="minArgs">Minimum number of arguments</param>
            <param name="maxArgs">Maximum number of arguments</param>
            <param name="type">System.Type of function</param>
            <param name="category">Function category</param>
            <param name="description">Function description</param>
            <param name="argList">Function argument list identifiers</param>
            <param name="argDescriptors">Function argument list descriptors</param>
            <param name="udf">True if this is a user-defined function - otherwise false.</param>
            <param name="alwaysDirty">Indicates if the functions value is always dirty</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.#ctor(System.String,System.Int32,System.Int32,System.Type,System.Boolean)">
            <summary>
            Formula function decriptor providing methods and properties to define and access functions.
            Function descriptors, argument list identifiers, and argument descriptors are loaded from the resource file 
            based on names derived from the function name.  "Func_" + this.name + "_Desc" contains the function
            descriptor, "Func_" + this.name + "_Arg_" + index contains the argument list identifiers where
            index = 0 to argListCount, and "Func_" + this.name + "_ArgDesc_" + index contains the argument list identifiers where
            index = 0 to argListCount.  argListCount is (maxArgs-1) if maxArgs != int.MaxValue, otherwise (minArgs-1)
            </summary>
            <param name="name">Function Name</param>
            <param name="minArgs">Minimum number of arguments</param>
            <param name="maxArgs">Maximum number of arguments</param>
            <param name="type">Syste.Type of function</param>
            <param name="alwaysDirty">Indicates if the function's value is always dirty</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.Match(System.String,System.Int32)">
            <summary>
            Returns an <b>UlraCalcFunction</b> instance if the function matches the given name and argument count
            </summary>
            <param name="name">Function name</param>
            <param name="argCount">Number of arguments passed to the function</param>
            <returns>UltraCalcFunction instance</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.IsUserDefined">
            <summary>
            Returns whether this function is a user defined function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.IsAlwaysDirty">
            <summary>
            Returns whether this function is an always dirty function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.Category">
            <summary>
            Returns the function <b>UCFunctionCategory</b> category code
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.Name">
            <summary>
            Returns the function name used to reference the funtion in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.Description">
            <summary>
            Returns a summary function description
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.ArgList">
            <summary>
            Returns a list of function argument names
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.ArgDescriptors">
            <summary>
            Returns a list of function argument descriptors
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.Type">
            <summary>
            Returns the system type for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.MinArgs">
            <summary>
            Returns the funtion's minimum number of arguments
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDescriptor.MaxArgs">
            <summary>
            Returns the funtion's maxiumn number of arguments
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UCFunctionFactory">
            <summary>
            This class manages the list of formula functions available in UltraCalc as well as methods to locate and instaniate function classes.
            </summary>
            <remarks>
            <p class="body">
            The function factor is manages a list of functions that can be referenced in formulas.  Each function is defined through a 
            <b>UltraCalcFunctionDescriptor</b> that contains methods and properties to access the function information such as its decription and argument arity.
            User defined functions may be created to extend this table, and are available when registering them with a specific UltraCalcEngine instance.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory)">
            <summary>
            Constructor that accepts a user defined function factory instance that extends the list of available function that may be referenced by formulas
            </summary>
            <param name="udfFactory">User defined function factory</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.Find(System.Type)">
            <summary>
            Method used to return the function descriptor given the function type
            </summary>
            <param name="type">Function type code</param>
            <returns>UltraCalcFunctionDescriptor instance</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.Construct(System.String,System.Int32)">
            <summary>
            Returns a <b>UltraCalcFunction</b> instance for the given function name and argument count
            </summary>
            <param name="name">Function name</param>
            <param name="argCount">Argument count</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to iterate the loaded functions.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.Reset">
            <summary>
            Resets the position of the enumerator
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCFunctionFactory.MoveNext">
            <summary>
            Advances the enumerator to the next function of the collection.
            </summary>
            <returns>True if there are more items; otherwise false.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCFunctionFactory.Item(System.String)">
            <summary>
            Indexer used to return the function descriptor given the function name
            </summary>
            <param name="functionName">Function name</param>
            <returns>UltraCalcFunctionDescriptor instance</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCFunctionFactory.UserDefinedFunctionFactory">
            <summary>
            Property to get or set the user defined function factory that extends the built-in function table
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCFunctionFactory.Current">
            <summary>
            Returns the current element in the collection enumerator.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCRecalcChain.CopyTo(System.Array,System.Int32)">
            <summary>
            Copys the collection to an array.
            </summary>
            <param name="array">Array used for the desitnation of the copy.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCRecalcChain.GetEnumerator">
            <summary>
            Returns the collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCRecalcChain.IsSynchronized">
            <summary>
            Denotes whether the collection is thread-safe.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCRecalcChain.Count">
            <summary>
            Returns a number of elements in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCRecalcChain.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AddAncestor(Infragistics.WebUI.CalcEngine.UCReference,Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Add a formula refernce the given predecessor reference
            </summary>
            <param name="predecessor"><b>UCReference</b> predecessor reference</param>
            <param name="ancestor"><b>IUltraCalcReference</b> of formula that contains the given predecessor</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.Find(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Return the position of the given predecessor in the collection
            </summary>
            <param name="predecessor"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.DeleteAncestor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Remove the given formula ancestor from the given  predecessor's list of formulas.
            </summary>
            <param name="formulaPredecessor"><b>IUltraCalcReference</b> that's referenced by given ancestor's formula</param>
            <param name="ancestor">Formula refernce to remove for given predecessor's list of formulas</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.DeleteAncestorAt(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Remove the given formula ancestor from the given  predecessor's list of formulas.
            </summary>
            <param name="posPredecessor">Position of the predecessor in the ancestor list</param>
            <param name="posAncestor">Position of the ancestor in the predecessor's Ancestors list</param>
            <param name="replacePredecessorInMapEntry">Indicates whether to update the predecessor reference in the ancestor map</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.Ancestors(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Return the collection of ancestors of the given predecessor
            </summary>
            <param name="predecessor">Reference whose collection of formulas to return</param>
            <returns>Collection of references whose formulas reference the given predecessor</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.IndexOf(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Return the index of the given predecessor
            </summary>
            <param name="predecessor">Reference whose index is to be returned</param>
            <returns>Index of given predecessor, or -1 if its not found</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.CopyTo(System.Array,System.Int32)">
            <summary>
            Copys the collection to an array.
            </summary>
            <param name="array">Array used for the desitnation of the copy.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.GetEnumerator">
            <summary>
            Returns the collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.IsSynchronized">
            <summary>
            Denotes whether the collection is thread-safe.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.Count">
            <summary>
            Returns a number of elements in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry">
            <summary>
            Provides methods and properties to manage a list of formulas that reference a given reference
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.#ctor(Infragistics.WebUI.CalcEngine.UCReference)">
            <summary>
            Predecessor constructor
            </summary>
            <param name="predecessor">predecessor for this instance</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.Equals(System.Object)">
            <summary>
            Equality method that returns whether an object is equal to this one
            </summary>
            <param name="obj">Object to compare to this entry</param>
            <returns>True if object is equal to this instance, else false</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.GetHashCode">
            <summary>
            Return hashcode for this object
            </summary>
            <returns>Integer hash code for this object</returns>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.formulaPredecessor">
            <summary>
            Storage for predecessor
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.formulaAncestors">
            <summary>
            Storage for ancestor collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.Predecessor">
            <summary>
            Get/Set the predecessor for this entry
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcAncestorMap.AncestorMapEntry.Ancestors">
            <summary>
            Get/Set the ancestor collection for this entry
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.FormulaReference">
            <summary>
            IUltraCalcReference implementation for caching the Formula of the underlying reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcEngine"/>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunctionLibrary(System.String)">
            <summary>
            Registers an assembly containing <b>UltraCalcFunction</b> types.
            </summary>
            <param name="assemblyPath">File path to the assembly</param>
            <returns>Returns true if the assembly was registered successfully, else false if the registration failed</returns>
            <remarks>
            <p class="body">
            All types within the registered assembly are enumerated and any that derive from <b>UltraCalcFunction</b> class are added to the list of available formula functions
            </p>
            </remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunction(Infragistics.WebUI.CalcEngine.UltraCalcFunction)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunctionLibrary(System.Reflection.Assembly)">
            <summary>
            Registers an assembly containing <b>UltraCalcFunction</b> types.
            </summary>
            <param name="assembly">Loaded assembly to register</param>
            <returns>Returns true if the assembly was registered successfully, else false if the registration failed</returns>
            <remarks>
            <p class="body">
            All types within the registered assembly are enumerated and any that derive from <b>UltraCalcFunction</b> class are added to the list of available formula functions
            </p>
            </remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunction(Infragistics.WebUI.CalcEngine.UltraCalcFunction)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunction(Infragistics.WebUI.CalcEngine.UltraCalcFunction)">
            <summary>
            Registers a single <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/>
            </summary>
            <param name="function">User defined function instance to register</param>
            <returns>Returns true if the type was registered successfully, else false if the registration failed</returns>
            <remarks>
            <p class="body">
            Users can build custom functions used in formulas by sub-classing the <b>UltraCalcFunction</b> class.  
            Once the derived class is instaniated it must be registered by using the <b>AddFunction</b> method before being avilable and referenced by a formulas.
            Users can build a library of functions packaged in an assembly and register all the functions within the assembly by using the <b>AddFunctionLibrary</b> method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFunctionLibrary(System.String)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.AddFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Adds a formula into the calculation network.
            </summary>
            <param name="formula">Formula instance containing compiled formula string to add into the calculation network.</param>
            <remarks>
            <p class="body">
            Formulas are entered into the calculation network by first compiling the formula string using the <b>Compile</b> method on the <b>UltraCalcFormula</b> class, then passing the <b>UltraCalcFormula</b> instance to the <b>AddFormula</b> method.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.DeleteFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Deletes a formula from the calculation network.
            </summary>
            <param name="formula">Formula instance to be removed.</param>
            <remarks>
            <p class="body">
            References to formulas that are deleted are recalculated.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.ProcessAddFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula,Infragistics.WebUI.CalcEngine.IUltraCalcReference)"/>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFormula"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Recalc(System.Int64)">
            <summary>
            Performs a time-based recalculation
            </summary>
            <param name="ticks">Denotes the number of 100-nanosecond intervals used to perform time-based partial recalculation cycles</param>
            <returns>Returns true if there are still formulas to recalculate or false if recalculation process is complete</returns>
            <remarks>
            <p class="body">
            This method performs a partial recalculation cycle, yielding after the given number of ticks has expired.  This method should be repeately
            called until it returns false denoting all dirty formulas have been recalculated.
            <p></p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Recalc(System.Int64)"/> 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Recalc">
            <summary>
            Performs a synchronous recalculation
            </summary>
            <returns>Returns true if the reference is dirty, else false</returns>
            <p></p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Recalc(System.Int64)"/> 
            <remarks>
            <p class="body">
            This method recalculates all dirty formulas before returning.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.IsDirty(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.Boolean)">
            <summary>
            Checks to see if a reference is dirty, and optionally waits for it to be recalculated
            </summary>
            <param name="reference">Reference whose dirty state is requested</param>
            <param name="wait">Denotes whether caller wants to wait until the reference is recalculated</param>
            <returns>True if the reference is dirty</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Dump">
            <summary>
            Outputs information about the current state of the calculation engine.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.OnRecalcValue(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)">
            <summary>
            Used to invoke the <see cref="F:Infragistics.WebUI.CalcEngine.UltraCalcEngine.RecalcValue"/> event
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.OnCircularity(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)">
            <summary>
            Used to invoke the <see cref="F:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Circularity"/> event
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcEngine.OnDirtyValue(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)">
            <summary>
            Used to invoke the <see cref="F:Infragistics.WebUI.CalcEngine.UltraCalcEngine.DirtyValue"/> event
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcEngine.EnableMarkedColumns">
            <summary>
            Returns or sets whether deferred calculations are enabled.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcEngine.FunctionFactory">
            <summary>
            Returns the formula function factory for this instance of the calc engine
            </summary>
            <remarks>
            <p class="body">
            Use the function factory to access detailed information about each function available to formulas compiled against this instance of the calc engine.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcEngine.CircularReference">
            <summary>
            Gets or sets a reference within a circular reference cycle.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.CalcEngine.UltraCalcEngine.RecalcValue">
            <summary>
            Recalced value event 
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.CalcEngine.UltraCalcEngine.Circularity">
            <summary>
            Circularity
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.CalcEngine.UltraCalcEngine.DirtyValue">
            <summary>
            Dirty value event
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFormula">
            <summary>
            Provides methods to compile and evaluate formulas.
            </summary>
            <remarks>
            <p class="body">
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormula.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String)">
            <summary>
            Initializes and compiles a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFormula"/>.
            </summary>
            <param name="formulaReference">Formula base reference.</param>
            <param name="formula">Formula string to be compiled.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormula.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String,Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory)">
            <summary>
            Initializes and compiles a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFormula"/>.
            </summary>
            <param name="formulaReference">Formula base reference.</param>
            <param name="formula">Formula string to be compiled.</param>
            <param name="functionFactory">Class providing the functions.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormula.Evaluate(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Evaluate the compiled expression against the given base reference
            </summary>
            <param name="reference">Base reference used to resolve relative references into absolute references</param>
            <returns>Retuns an UltraCalcValue containing result of formula evaluation</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.HasSyntaxError">
            <summary>
            Returns true if the formula has a syntax error. Formulas with syntax errors can not be added to the calc-network.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.SyntaxError">
            <summary>
            Syntax error message. Returns null if the formula has no syntax errors, as would be indicated by <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.HasSyntaxError"/> method.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.HasAlwaysDirty">
            <summary>
            Denotes whether the formula contains an always dirty function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.FormulaString">
            <summary>
            Returns the formula string
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.BaseReference">
            <summary>
            Gets or sets the formula base reference
            </summary>
            <remarks>
            <p class="body">
            The base reference of a formula is sometimes referred to as the Left-Hand-Side (LHS)of an expression.  
            It represents the location within the grid, or other object, whose value is being computed by the given formula.  
            References within the formula expression my be fully qualified or relative to the formula's base reference.  
            For example, if we want to calculate a "[Total]" column in a grid we might have a formula such as "[Units] * [Price]".  Each cells within the
            "Total" column would be computed multiplying the "Units" cell and "Price" cell for row in the band.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.Tokens">
            <summary>
            Returns a collection of formula tokens in pre-fix form, called Reverse Polish Notation.
            </summary>
            <returns>Formula token collection</returns>
            <remarks>
            <p class="body">
            Compiling a formula converts the in-fix expression string into an intemediate post-fix form optimized for evaluation.  
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormula.References">
            <summary>
            Retuns a collection of references contained in the formula token string
            </summary>
            <returns>Collection of IUltraCalcReferences</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection)">
            <summary>
            Constructor that accepts a collection of formula tokens used to access the references in a formula.
            </summary>
            <param name="tokens">Formula token collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.Add(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Adds a reference to the collection.
            </summary>
            <param name="reference"><b>IUltraCalcReference</b> instance to add to collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copys the collection to an array.
            </summary>
            <param name="array">Array used for the desitnation of the copy.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.GetEnumerator">
            <summary>
            Returns the collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.tokenArray">
            <summary>
            Underlying collection object managing the token collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.IsSynchronized">
            <summary>
            Denotes whether the collection is thread-safe.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.Count">
            <summary>
            Returns a number of elements in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaReferenceCollection.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaToken.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenType)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaToken.Type" -->
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection">
            <summary>
            Provides methods and properties to manage a collection of <b>UltraCalcFormulaTokens</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.Add(Infragistics.WebUI.CalcEngine.UltraCalcFormulaToken)">
            <summary>
            Add a token to the collection.
            </summary>
            <param name="token">Token to add to collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the underlying list.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.ToArray">
            <summary>
            Copies the elements of the underlying list to a new array.
            </summary>
            <returns>Copy of collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the collection to an array.
            </summary>
            <param name="array">Array that is the destination of the copy.</param>
            <param name="index">Index into array to begin copying collection elements.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.GetEnumerator">
            <summary>
            Returns the collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.TokenArray">
            <summary>
            Underlying ArrayList used to manage token collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.IsSynchronized">
            <summary>
            Denotes whether the collection is thread-safe.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.Count">
            <summary>
            Returns the number of collection elements.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaTokenCollection.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction">
            <summary>
            Base class for formula functions.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunction.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunction.PerformEvaluation(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunction.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An UltraCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunction.GetArguments(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32,System.Boolean)">
            <summary>
            A helper method for extracting the UltraCalcValues from the stack.
            </summary>
            <param name="numberStack">Number stack whose values should be popped.</param>
            <param name="argumentCount">Number of items to pop/evaluate from the number stack</param>
            <param name="skipEmptyValues">True to ignore values whose IsNull returns true; otherwise false to include empty items in the list.</param>
            <returns>An array of UltraCalcValue instances removed from the number stack.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.IsAlwaysDirty">
            <summary>
            Indicates whether the results of the function is always dirty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.Description">
            <summary>
            Summary description for the function displayed by the formula builder tool
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.Category">
            <summary>
            Category description for the function displayed by the formula builder tool
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.ArgList">
            <summary>
            Array list of argument names
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.ArgDescriptors">
            <summary>
            Array list of argument descriptors
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunction.HelpURL">
            <summary>
            A URL to a help topic. 
            </summary>
            <remarks> 
            <p class="body">This property is used by the Function Builder at design-time to provide a link to a help topic describing the function.</p>
            <p class="body">The default implementation returns an empty string. In this case, the Designer will not show the Help link.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase">
            <summary>
            Base class for the built in functions.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase.Description">
            <summary>
            Summary description for the function displayed by the formula builder tool
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase.Category">
            <summary>
            Category description for the function displayed by the formula builder tool
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase.ArgList">
            <summary>
            Array list of argument names
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase.ArgDescriptors">
            <summary>
            Array list of argument descriptors
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.BuiltInFunctionBase.HelpURL">
            <summary>
            A URL to a help topic. 
            </summary>
            <remarks> 
            <p class="body">This property is used by the Function Builder at design-time to provide a link to a help topic describing the function.</p>
            <p class="body">The default implementation returns the Func_CategoryURL_Template resource string. The first substitution string argument, "{0}", will be replaced by the Func_<i>FUNCTIONNAME</i>_CategoryURL resource. The second substitution string argument, "{1}", will be the Function Name.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAverage">
            <summary>
            Returns the average (arithmetic mean) of the arguments
            </summary>
            <remarks>
            <p class="body">
            AVERAGE(number1,number2,...)
            <p></p>
            Number1, number2, ...    are numeric arguments for which you want the average.
            <p></p>
            The arguments must either be numbers or references that contain numbers. 
            <p></p>
            If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAverage.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAverage.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAverage.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAverage.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSum">
            <summary>
            Adds all the numbers in a range of cells
            </summary>
            <remarks>
            <p class="body">
            SUM(number1,number2, ...)
            <p/>
            Number1, number2, ...    are arguments for which you want the total value or sum.
            Numbers, logical values, and text representations of numbers that you type directly into the list of arguments are counted.
            <p/>
            If an argument is a reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. 
            <p/>
            Arguments that are error values or text that cannot be translated into numbers cause errors. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSum.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSum.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSum.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSum.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus">
            <summary>
            '+' Unary plus formula operator (+20)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryPlus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus">
            <summary>
            '-' Negation formula operator (-20)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUnaryMinus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus">
            <summary>
            '+' Addition formula operator (1+2)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPlus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus">
            <summary>
            '-' Subtraction formula operator (3-2)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent">
            <summary>
             '%' Percent formula operator (20%)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPercent.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply">
            <summary>
            '*' Multiplication formula operator (2*3)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMultiply.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide">
            <summary>
            '/' Division formula operator (3/2)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDivide.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat">
            <summary>
            '&amp;' formula operator used to concatenate two strings. ("First" &amp; "Second")
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcat.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcatenate">
            <summary>
            Joins several text strings into one text string.
            </summary>
            <remarks>
            <p class="body">
            CONCATENATE (text1,text2,...)
            <p>
            Text1, text2, ...	are one or more text items to be joined into a single text item. The text items can be text strings, numbers, or single-cell references.
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcatenate.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcatenate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcatenate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionConcatenate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual">
            <summary>
            '=' Equality formula operator (Price = 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEqual.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE">
            <summary>
            "&lt;&gt;" Inequality formula operator (Price &lt;&gt; 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT">
            <summary>
            '&lt;' Less than formula operator (Price &lt; 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLT.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE">
            <summary>
            "&lt;=" Less than or equal formula operator (Price &lt;= 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT">
            <summary>
            "&gt;" Greater than formula operator (Price > 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGT.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE">
            <summary>
            "&gt;=" Greater than or equal formula operator (Price >= 200)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionGE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon">
            <summary>
            "^" Exponentiation formula operator (3^2)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExpon.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIf">
            <summary>
            Returns one value if a condition you specify evaluates to TRUE and another value if it evaluates to FALSE
            </summary>
            <remarks>
            <p class="body">
            IF(logical_test,value_if_true,value_if_false)
            <p>
            Logical_test	is any value or expression that can be evaluated to TRUE or FALSE. 
            </p><p>
            Value_if_true   is the value that is returned if logical_test is TRUE. 
            </p><p>
            Value_if_false	is the value that is returned if logical_test is FALSE. 
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIf.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIf.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIf.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIf.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAbs">
            <summary>
            Returns the absolute value of a number. The absolute value of a number is the number without its sign
            </summary>
            <remarks>
            <p class="body">
            ABS(number)
            <p>
            Number is the real number of which you want the absolute value
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAbs.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAbs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAbs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAbs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMod">
            <summary>
            Returns the remainder after number is divided by divisor. The result has the same sign as divisor.
            </summary>
            <remarks>
            <p class="body">
            MOD(number,divisor)
            <p>
            Number is the number for which you want to find the remainder.
            </p><p>
            Divisor is the number by which you want to divide number.
            </p><p>
            If divisor is 0, MOD returns the #DIV/0! error value.
            </p>
            The MOD function can be expressed in terms of the INT function: MOD(n, d) = n - d*INT(n/d)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMod.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMod.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMod.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMod.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionQuotient">
            <summary>
            Returns the integer portion of a division. Use this function when you want to discard the remainder of a division.
            </summary>
            <remarks>
            <p class="body">
            QUOTIENT(numerator,denominator)
            <p>
            Numerator is the dividend.
            </p><p>
            Denominator is the divisor.
            </p>
            If either argument is nonnumeric, QUOTIENT returns the #VALUE! error value.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionQuotient.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionQuotient.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionQuotient.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionQuotient.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionProduct">
            <summary>
            Multiplies all the numbers given as arguments and returns the product.
            </summary>
            <remarks>
            <p class="body">
            Product(number1, number2, ..., numberN)
            <p>
            Number1 is the first number in the series that you want to multiply
            </p><p>
            Number2 is the second number in the series that you want to multiply
            </p>
            Numbern is the last number in the series that you want to multiply
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionProduct.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionProduct.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionProduct.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionProduct.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPower">
            <summary>
            Returns the result of a number raised to a power
            </summary>
            <remarks>
            <p class="body">
            POWER(number,power)
            <p>
            Number is the base number
            </p>
            Power is the exponent to which the base number is raised
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPower.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPower.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPower.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPower.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionInt">
            <summary>
            Rounds a number down to the nearest integer.
            </summary>
            <remarks>
            <p class="body">
            INT(number)
            <p>
            Number  is the real number you want to round down to an integer
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionInt.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionInt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionInt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionInt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrunc">
            <summary>
            Truncates a number to an integer by removing the fractional part of the number.
            </summary>
            <remarks>
            <p class="body">
            TRUNC(number,num_digits)
            <p>
            Number		is the number you want to truncate.
            </p>
            Num_digits	is a number specifying the precision of the truncation. The default value for num_digits is 0 (zero).
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrunc.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrunc.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrunc.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrunc.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCount">
            <summary>
            Counts the number of cells that contain numbers and also numbers within the list of arguments. 
            </summary>
            <remarks>
            <p class="body">
            Count(value1, value2, ..., valuen)
            <p>
            Value1, value2, ... valueN  are arguments that can contain or refer to a variety of different types of data, but only numbers are counted.
            </p><p>
            Arguments that are numbers, dates, or text representations of numbers are counted; arguments that are 
            error values or text that cannot be translated into numbers are ignored. 
            </p>
            If an argument is a range reference, only numbers in that range are counted. Empty cells, logical values, 
            text, or error values in the array or reference are ignored.  
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCount.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCount.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCount.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCount.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrue">
            <summary>
            Returns the logical value TRUE
            </summary>
            <remarks>
            <p class="body">
            TRUE()
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrue.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFalse">
            <summary>
            Returns the logical value FALSE
            </summary>
            <remarks>
            <p class="body">
            FALSE()
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFalse.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFalse.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFalse.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFalse.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNot">
            <summary>
            Reverses the logic of its argument
            </summary>
            <remarks>
            <p class="body">
            NOT(logical)
            <p>
            Logical    is a value or expression that can be evaluated to TRUE or FALSE
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNot.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNot.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNot.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNot.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAnd">
            <summary>
            Returns TRUE if all its arguments are TRUE; returns FALSE if one or more argument is FALSE.
            </summary>
            <remarks>
            <p class="body">
            AND(logical1,logical2, ...)
            <p>
            Logical1, logical2, ...    are conditions you want to test that can be either TRUE or FALSE.
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAnd.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAnd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAnd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionAnd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOr">
            <summary>
            Returns TRUE if any argument is TRUE; returns FALSE if all arguments are FALSE.
            </summary>
            <remarks>
            <p class="body">
            Or(logical1,logical2, ...)
            <p>
            Logical1, logical2, ...    are conditions you want to test that can be either TRUE or FALSE.
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOr.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOr.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOr.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOr.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMin">
            <summary>
            Returns the smallest number in a set of values.
            </summary>
            <remarks>
            <p class="body">
            MIN(number1,number2,...)
            <p>
            Number1, number2, ...    are 1 to 30 numbers for which you want to find the minimum value. 
            </p><p>
            You can specify arguments that are numbers, empty cells, logical values, or text representations of numbers. 
            Arguments that are error values or text that cannot be translated into numbers cause errors. 
            </p><p>
            If an argument is a reference, only numbers in that reference are used. Empty cells, logical values, or text 
            in the reference are ignored. 
            </p> 
            If the arguments contain no numbers, MIN returns 0. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMin.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMax">
            <summary>
            Returns the largest number in a set of values. 
            </summary>
            <remarks>
            <p class="body">
            MAX(number1,number2,...)
            <p>
            Number1, number2, ...    are 1 to 30 numbers for which you want to find the maximum value. 
            </p><p>
            You can specify arguments that are numbers, empty cells, logical values, or text representations of numbers. 
            Arguments that are error values or text that cannot be translated into numbers cause errors. 
            </p><p>
            If an argument is a reference, only numbers in that reference are used. Empty cells, logical values, or text 
            in the reference are ignored. 
            </p>
            If the arguments contain no numbers, MAX returns 0. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMax.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMax.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMax.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMax.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExp">
            <summary>
            Returns e raised to the power of number. The constant e equals 2.71828182845904, the base of the natural logarithm.
            </summary>
            <remarks>
            <p class="body">
            EXP(number)
            <p>
            Number     the exponent applied to the base e.
            </p><p>
            To calculate powers of other bases, use the exponentiation operator (^). 
            </p>
            EXP is the inverse of LN, the natural logarithm of number.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExp.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExp.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExp.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionExp.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRound">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <remarks>
            <p class="body">
            ROUND(number,num_digits)
            <p>
            Number    is the number you want to round
            </p><p>
            Num_digits    specifies the number of digits to which you want to round number
            </p><p>
            If num_digits is greater than 0 (zero), then number is rounded to the specified number of decimal places. 
            </p><p>
            If num_digits is 0, then number is rounded to the nearest integer. 
            </p>
            If num_digits is less than 0, then number is rounded to the left of the decimal point
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRound.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRound.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRound.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRound.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPi">
            <summary>
            Returns the number 3.14159265358979, the mathematical constant pi
            </summary>
            <remarks>
            <p class="body">
            PI()
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPi.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPi.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPi.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPi.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSqrt">
            <summary>
            Returns a positive square root.
            </summary>
            <remarks>
            <p class="body">
            SQRT(Number)
            <p>
            Number    is the number for which you want the square root.
            </p>
            If number is negative, SQRT returns the #NUM! error value.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSqrt.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSqrt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSqrt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSqrt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCos">
            <summary>
            Returns the cosine of the given angle.
            </summary>
            <remarks>
            <p class="body">
            COS(Number)
            <p>
            Number    is the angle in radians for which you want the cosine.
            </p>
            If the angle is in degrees, multiply it by PI()/180 or use the COS function to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCos.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCos.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCos.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCos.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACos">
            <summary>
            Returns the arccosine, or inverse cosine, of a number. The arccosine is the angle whose cosine is number. The returned angle is given in radians in the range 0 (zero) to pi.
            </summary>
            <remarks>
            <p class="body">
            ACOS(Number)
            <p>
            Number    is the cosine of the angle you want and must be from -1 to 1.
            </p>
            If you want to convert the result from radians to degrees, multiply it by 180/PI().
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACos.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACos.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACos.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACos.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCosh">
            <summary>
            Returns the hyperbolic cosine of an angle.
            </summary>
            <remarks>
            <p class="body">
            COSH(Number)
            <p>
            Number      is an angle, measured in radians.
            </p>
            If your argument is in degrees, multiply it by PI()/180 to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCosh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCosh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCosh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCosh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACosh">
            <summary>
            Returns the inverse hyperbolic cosine of a number.
            </summary>
            <remarks>
            <p class="body">
            ACOSH(Number)
            </p>
            <p class="body">
            Number      is a real number greater than 1.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACosh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arccosh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACosh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACosh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionACosh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSin">
            <summary>
            Returns the sine of the given angle.
            </summary>
            <remarks>
            <p class="body">
            SIN(Number)
            <p>
            Number     is the angle in radians for which you want the sine.
            </p>
            If your argument is in degrees, multiply it by PI()/180 to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSin.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSinh">
            <summary>
            Returns the hyperbolic sine of an angle.
            </summary>
            <remarks>
            <p class="body">
            SINH(Number)
            <p>
            Number      is an angle, measured in radians.
            </p>
            If your argument is in degrees, multiply it by PI()/180 to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSinh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSinh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSinh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSinh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASin">
            <summary>
            Returns the arcsine, or inverse sine, of a number. The arcsine is the angle whose sine is number. The returned angle is given in radians in the range -pi/2 to pi/2.
            </summary>
            <remarks>
            <p class="body">
            ASIN(Number)
            <p>
            Number      is the sine of the angle you want and must be from -1 to 1.
            </p>
            To express the arcsine in degrees, multiply the result by 180/PI()
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASin.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASinh">
            <summary>
            Returns the inverse hyperbolic sine of a number.
            </summary>
            <remarks>
            <p class="body">
            ASINH(Number)
            </p>
            <p class="body">
            Number      is a real number.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASinh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arcsinh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASinh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASinh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionASinh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTan">
            <summary>
            Returns the tangent of the given angle.
            </summary>
            <remarks>
            <p class="body">
            TAN(Number)
            <p>
            Number     is the angle in radians for which you want the tangent.
            </p>
            If your argument is in degrees, multiply it by PI()/180 to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTan.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTan.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTan.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTan.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTanh">
            <summary>
            Returns the hyperbolic tangent of an angle.
            </summary>
            <remarks>
            <p class="body">
            TANH(Number)
            <p>
            Number      is an angle, measured in radians.
            </p>
            If your argument is in degrees, multiply it by PI()/180 to convert it to radians.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTanh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTanh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTanh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTanh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan">
            <summary>
            Returns the arctangent, or inverse tangent, of a number. The arctangent is the angle whose tangent is number. The returned angle is given in radians in the range -pi/2 to pi/2.
            </summary>
            <remarks>
            <p class="body">
            ATAN(number)
            <p>
            Number      is the tangent of the angle you want.
            </p>
            To express the arctangent in degrees, multiply the result by 180/PI().
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan2">
            <summary>
            Returns the arctangent, or inverse tangent, of the specified x- and y-coordinates. The arctangent is the angle from the x-axis to a line 
            containing the origin (0, 0) and a point with coordinates (x_num, y_num). The angle is given in radians between -pi and pi, excluding -pi.
            </summary>
            <remarks>
            <p class="body">
            ATAN2(x,y)
            <p>
            X    is the x-coordinate of the point.
            </p><p>
            Y    is the y-coordinate of the point.
            </p><p>
            A positive result represents a counterclockwise angle from the x-axis; a negative result represents a clockwise angle. 
            </p><p>
            ATAN2(a,b) equals ATAN(b/a), except that a can equal 0 in ATAN2. 
            </p>
            If both x and y are 0, ATAN2 returns the #DIV/0! error value. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan2.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan2.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan2.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATan2.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATanh">
            <summary>
            Returns the inverse hyperbolic tangent of a number.
            </summary>
            <remarks>
            <p class="body">
            ATANH(Number)
            </p>
            <p class="body">
            Number      is a real number between -1 and 1, inclusive.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATanh.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arctanh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATanh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATanh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionATanh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFloor">
            <summary>
            Returns the largest whole number less than or equal to the given number
            </summary>
            <remarks>
            <p class="body">
            FLOOR(number)
            <p>
            Number   is the numeric value you want to round.
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFloor.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFloor.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFloor.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFloor.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCeiling">
            <summary>
            Returns the smallest whole number greater than or equal to the given number
            </summary>
            <remarks>
            <p class="body">
            CEILING(number)
            <p></p>
            Number   is the numeric value you want to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCeiling.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCeiling.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCeiling.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCeiling.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand">
            <summary>
            Returns an evenly distributed random number greater than or equal to 0 and less than 1. A new random number is returned every time the cell is calculated.
            </summary>
            <remarks>
            <p class="body">
            RAND()
            <p></p>
            To generate a random real number between a and b, use: RAND()*(b-a)+a
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand.IsAlwaysDirty">
            <summary>
            Indicates whether the results of the function is always dirty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRand.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLn">
            <summary>
            Returns the natural logarithm of a number. Natural logarithms are based on the constant e (2.71828182845904).
            </summary>
            <remarks>
            <p class="body">
            LN(number)
            <p></p>
            Number    is the positive real number for which you want the natural logarithm.
            <p></p>
            LN is the inverse of the EXP function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLn.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLn.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLn.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLn.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog10">
            <summary>
            Returns the base-10 logarithm of a number.
            </summary>
            <remarks>
            <p class="body">
            LOG10(number)
            <p></p>
            Number    is the positive real number for which you want the base-10 logarithm.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog10.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog10.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog10.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog10.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog">
            <summary>
            Returns the logarithm of a number to the base you specify
            </summary>
            <remarks>
            <p class="body">
            LOG(number, base)
            <p></p>
            Number    is the positive real number for which you want the logarithm.
            <p></p>
            Base      is the base of the logarithm. If base is omitted, it is assumed to be 10.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLog.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPV">
            <summary>
            Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).
            </summary>
            <remarks>
            <p class="body">
            NPV(rate,value1,value2, ...)
            <p></p>
            Rate    is the rate of discount over the length of one period.
            <p></p>
            Value1, value2, ...    are 1 to 29 arguments representing the payments and income.
            <p></p>
            Value1, value2, ... must be equally spaced in time and occur at the end of each period. 
            <p></p>
            NPV uses the order of value1, value2, ... to interpret the order of cash flows. Be sure to enter your payment and income values in the correct sequence. 
            <p></p>
            Arguments that are numbers, empty cells, logical values, or text representations of numbers are counted; arguments that are error values or text that cannot be translated into numbers are ignored. 
            <p></p>
            If an argument is a reference, only numbers in that reference are used. Empty cells, logical values, or text 
            in the reference are ignored. 
            <p></p>
            The NPV investment begins one period before the date of the value1 cash flow and ends with the last cash flow in the list. 
            <p></p>
            The NPV calculation is based on future cash flows. If your first cash flow occurs at the beginning of the first period, the 
            first value must be added to the NPV result, not included in the values arguments. For more information, see the examples below. 
            <p></p>
            NPV is similar to the PV function (present value). The primary difference between PV and NPV is that PV allows cash flows to begin either at the end or at the beginning of the period. Unlike the variable NPV cash flow values, PV cash flows must be constant throughout the investment. For information about annuities and financial functions, see PV. 
            <p></p>
            NPV is also related to the IRR function (internal rate of return). IRR is the rate for which NPV equals zero: NPV(IRR(...), ...) = 0. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPV.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFV">
            <summary>
            Returns the future value of an investment based on periodic, constant payments and a constant interest rate.
            </summary>
            <remarks>
            <p class="body">
            FV(rate,nper,pmt,pv,type)
            <p></p>
            Rate		is the interest rate per period.
            <p></p>
            Nper		is the total number of payment periods in an annuity.
            <p></p>
            Pmt		is the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but 
            		no other fees or taxes. If pmt is omitted, you must include the pv argument.
            <p></p>
            Pv		is the present value, or the lump-sum amount that a series of future payments is worth right now. If pv is omitted, it is 
            		assumed to be 0 (zero), and you must include the pmt argument.
            <p></p>
            Type		is the number 0 or 1 and indicates whether payments are due at the end of the period (default) or the beginning.
            <p></p>
            Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan 
            at 12 percent annual interest, use 12%/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper. 
            <p></p>
            For all the arguments, cash you pay out, such as deposits to savings, is represented by negative numbers; cash you receive, such as dividend 
            checks, is represented by positive numbers. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFV.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPV">
            <summary>
            Returns the present value of an investment. The present value is the total amount that a series of future payments is worth now. 
            </summary>
            <remarks>
            <p class="body">
            PV(rate,nper,pmt,pv,type)
            <p></p>
            Rate		is the interest rate per period. For example, if you obtain an automobile loan at a 10 percent annual interest rate and make monthly payments, your interest rate per month is 10%/12, or 0.83%. You would enter 10%/12, or 0.83%, or 0.0083, into the formula as the rate.
            <p></p>
            Nper		is the total number of payment periods in an annuity. For example, if you get a four-year car loan and make monthly payments, your loan has 4*12 (or 48) periods. You would enter 48 into the formula for nper.
            <p></p>
            Pmt		    is the payment made each period; it cannot change over the life of the annuity.
            <p></p>
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0). For example, if you want to save $50,000 to pay for a special project in 18 years, then $50,000 is the future value. You could then make a conservative guess at an interest rate and determine how much you must save each month. If fv is omitted, you must include the pmt argument.
            <p></p>
            Type		is the number 0 or 1 and indicates whether payments are due at the end of the period (default) or the beginning.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPV.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPmt">
            <summary>
            Calculates the payment for a loan based on constant payments and a constant interest rate.
            </summary>
            <remarks>
            <p class="body">
            PMT(rate,nper,pv,fv,type)
            <p></p>
            Rate		is the interest rate for the loan.
            <p></p>
            Nper		is the total number of payments for the loan.
            <p></p>
            Pv		is the present value, or the total amount that a series of future payments is worth now; also known as the principal.
            <p></p>
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.
            <p></p>
            Type		is the number 0 or 1 and indicates whether payments are due at the end of the period (default) or the beginning.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPmt.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPer">
            <summary>
            Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.
            </summary>
            <remarks>
            <p class="body">
            NPER(rate, pmt, pv, fv, type)
            <p></p>
            Rate		is the interest rate per period.
            <p></p>
            Pmt		is the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and 
            		interest but no other fees or taxes.
            <p></p>
            Pv		is the present value, or the lump-sum amount that a series of future payments is worth right now.
            <p></p>
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 
            		(the future value of a loan, for example, is 0).
            <p></p>
            Type		is the number 0 or 1 and indicates whether payments are due at the end of the period (default) or the beginning.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPer.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPer.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPer.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNPer.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEven">
            <summary>
            Rounds a positive number up and a negative number down to the nearest even integer.
            </summary>
            <remarks>
            <p class="body">
            EVEN(Number)
            <p></p>
            Number	is the value to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEven.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEven.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEven.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionEven.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOdd">
            <summary>
            Rounds a positive number up and a negative number down to the nearest odd integer.
            </summary>
            <remarks>
            <p class="body">
            ODD(Number)
            <p></p>
            Number is the value to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOdd.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionOdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPPmt">
            <summary>
            Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.
            </summary>
            <remarks>
            <p class="body">
            PPMT(rate,per,nper,pv,fv,type)
            <p></p>
            Rate		is the interest rate per period.
            <p></p>
            Per		specifies the period and must be in the range 1 to nper
            <p></p>
            Nper		is the total number of payment periods in an annuity
            <p></p>
            Pv		is the present value— the total amount that a series of future payments is worth now.
            <p></p>
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.
            <p></p>
            Type		is the number 0 or 1 and indicates when payments are due		 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPPmt.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionPPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIPmt">
            <summary>
            Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.
            </summary>
            <remarks>
            <p class="body">
            IPMT(rate,per,nper,pv,fv,type)
            <p></p>
            Rate		is the interest rate per period.
            <p></p>
            Per		specifies the period and must be in the range 1 to nper
            <p></p>
            Nper		is the total number of payment periods in an annuity
            <p></p>
            Pv		is the present value— the total amount that a series of future payments is worth now.
            <p></p>
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.
            <p></p>
            Type		is the number 0 or 1 and indicates when payments are due		 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIPmt.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLower">
            <summary>
            Converts all uppercase letters in a text string to lowercase.
            </summary>
            <remarks>
            <p class="body">
            LOWER(text)
            <p></p>
            Text	is the text you want to convert to lowercase. LOWER does not change characters in text that are not letters
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLower.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLower.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLower.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLower.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUpper">
            <summary>
            Converts all lowercase letters in a text string to uppercase.
            </summary>
            <remarks>
            <p class="body">
            UPPER(text)
            <p></p>
            Text	is the text you want to convert to uppercase. UPPER does not change characters in text that are not letters
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUpper.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUpper.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUpper.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionUpper.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLeft">
            <summary>
            LEFT returns the first character or characters in a text string, based on the number of characters you specify.
            </summary>
            <remarks>
            <p class="body">
            LEFT(text,num_chars)
            <p></p>
            Text		is the text string that contains the characters you want to extract
            <p></p>
            Num_chars	specifies the number of characters you want LEFT to extract
            <p></p>
            Num_chars must be greater than or equal to zero.
            <p></p>
            If num_chars is greater than the length of text, LEFT returns all of text.
            <p></p>
            If num_chars is omitted, it is assumed to be 1.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLeft.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLeft.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLeft.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLeft.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRight">
            <summary>
            RIGHT returns the last character or characters in a text string, based on the number of characters you specify.
            </summary>
            <remarks>
            <p class="body">
            RIGHT(text,num_chars)
            <p></p>
            Text		is the text string that contains the characters you want to extract
            <p></p>
            Num_chars	specifies the number of characters you want RIGHT to extract
            <p></p>
            Num_chars must be greater than or equal to zero.
            <p></p>
            If num_chars is greater than the length of text, RIGHT returns all of text.
            <p></p> 
            If num_chars is omitted, it is assumed to be 1.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRight.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRight.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRight.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRight.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMid">
            <summary>
            MID returns a specific number of characters from a text string, starting at the position you specify, based on the number of characters you specify.
            </summary>
            <remarks>
            <p class="body">
            MID(text,start_num,num_chars)
            <p></p>
            Text		is the text string that contains the characters you want to extract
            <p></p>
            Num_chars	specifies the number of characters you want LEFT to extract
            <p></p>
            Start_num    is the position of the first character you want to extract in text. The first character in text has start_num 1, and so on.
            <p></p>
            If start_num is greater than the length of text, MID returns "" (empty text). 
            <p></p>
            If start_num is less than the length of text, but start_num plus num_chars exceeds the length of text, MID returns the characters up to the end of text. 
            <p></p>
            If start_num is less than 1, MID returns the #VALUE! error value. 
            <p></p>
            If num_chars is negative, MID returns the #VALUE! error value.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMid.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMid.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMid.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMid.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrim">
            <summary>
            Removes all spaces from text except for single spaces between words. 
            </summary>
            <remarks>
            <p class="body">
            TRIM(text)
            <p></p>
            Text    is the text from which you want spaces removed.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrim.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrim.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrim.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTrim.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLen">
            <summary>
            Returns the number of characters in a text string
            </summary>
            <remarks>
            <p class="body">
            LEN(text)
            <p></p>
            Text    is the text whose length you want to find. Spaces count as characters.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLen.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLen.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLen.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionLen.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionValue">
            <summary>
            Converts a text string that represents a number to a number
            </summary>
            <remarks>
            <p class="body">
            VALUE(text)
            <p></p>
            Text    is the text enclosed in quotation marks or a reference to a cell containing the text you want to convert.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionValue.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFind">
            <summary>
            FIND finds one text string (find_text) within another text string (within_text), and returns the number of the starting position of find_text, from the first character of within_text. 
            </summary>
            <remarks>
            <p class="body">
            FIND(find_text,within_text,start_num)
            <p></p>
            Find_text    is the text you want to find.
            <p></p>
            Within_text	is the text containing the text you want to find
            <p></p>
            Start_num    specifies the character at which to start the search. The first character in within_text is character number 1. 
            			If you omit start_num, it is assumed to be 1.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFind.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFind.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFind.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFind.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionReplace">
            <summary>
            Replaces part of a text string, based on the number of characters you specify, with a different text string.
            </summary>
            <remarks>
            <p class="body">
            REPLACE(old_text,start_num,num_chars,new_text)
            <p></p>
            Old_text		is text in which you want to replace some characters.
            <p></p>
            Start_num    is the position of the character in old_text that you want to replace with new_text.
            <p></p>
            Num_chars    is the number of characters in old_text that you want REPLACE to replace with new_text.
            <p></p>
            New_text		is the text that will replace characters in old_text.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionReplace.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionReplace.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionReplace.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionReplace.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSYD">
            <summary>
            Returns the sum-of-years' digits depreciation of an asset for a specified period.
            </summary>
            <remarks>
            <p class="body">
            SYD(cost,salvage,life,per)
            <p></p>
            Cost    is the initial cost of the asset.
            <p></p>
            Salvage    is the value at the end of the depreciation (sometimes called the salvage value of the asset).
            <p></p>
            Life    is the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).
            <p></p>
            Per    is the period and must use the same units as life.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSYD.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSYD.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSYD.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSYD.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSLN">
            <summary>
            Returns the straight-line depreciation of an asset for one period.
            </summary>
            <remarks>
            <p class="body">
            SLN(cost,salvage,life)
            <p></p>
            Cost		is the initial cost of the asset.
            <p></p>
            Salvage	is the value at the end of the depreciation.
            <p></p>
            Life		is the number of periods over which the asset is depreciated.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSLN.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSLN.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSLN.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSLN.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDB">
            <summary>
            Returns the depreciation of an asset for a specified period using the fixed-declining balance method.
            </summary>
            <remarks>
            <p class="body">
            DB(cost,salvage,life,period,month)
            <p></p>
            Cost		is the initial cost of the asset.
            <p></p>
            Salvage  is the value at the end of the depreciation (sometimes called the salvage value of the asset).
            <p></p>
            Life		is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).
            <p></p>
            Period   is the period for which you want to calculate the depreciation. Period must use the same units as life.
            <p></p>
            Month    is the number of months in the first year. If month is omitted, it is assumed to be 12.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDB.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDB.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDB.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDB.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDDB">
            <summary>
            Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify.
            </summary>
            <remarks>
            <p class="body">
            DDB(cost,salvage,life,period,factor)
            <p></p>
            Cost		is the initial cost of the asset.
            <p></p>
            Salvage  is the value at the end of the depreciation (sometimes called the salvage value of the asset).
            <p></p>
            Life		is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).
            <p></p>
            Period   is the period for which you want to calculate the depreciation. Period must use the same units as life.
            <p></p>
            Factor    is the rate at which the balance declines. If factor is omitted, it is assumed to be 2 (the double-declining balance method).
            <p></p>
            All five arguments must be positive numbers
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDDB.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDDB.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDDB.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDDB.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIntRate">
            <summary>
            Returns the interest rate for a fully invested security.
            </summary>
            <remarks>
            <p class="body">
            INTRATE(settlement,maturity,investment,redemption,basis)
            <p></p>
            Settlement	is the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.
            <p></p>
            Maturity    is the security's maturity date. The maturity date is the date when the security expires.
            <p></p>
            Investment  is the amount invested in the security.
            <p></p>
            Redemption  is the amount to be received at maturity.
            <p></p>
            Basis		is the type of day count basis to use; 0 or omitted = US (NASD) 30/360, 1 = Actual/actual, 2 Actual/360, 3 = Actual/365, 4 = European 30/360
            <p></p>
            Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIntRate.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIntRate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIntRate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIntRate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateValue">
            <summary>
            Returns the .NET DateTime of the time represented by date formated in a string
            </summary>
            <remarks>
            <p class="body">
            DATEVALUE(date_text)
            <p></p>
            Date_text is text that represents a date in a .NET DateTime format
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateValue.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDate">
            <summary>
            Returns the .NET DateTime ticks number that represents a particular date
            </summary>
            <remarks>
            <p class="body">
            DATE(year,month,day)
            <p></p>
            Year is the number representing the year 
            <p></p>
            Month is a number representing the month of the year
            <p></p>
            Day is a number representing the day of the month
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDate.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDays360">
            <summary>
            Returns the number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations.
            </summary>
            <remarks>
            <p class="body">
            DAYS360(start_date,end_date,method)
            <p></p>
            Start_date and end_date are the two dates between which you want to know the number of days. 
            <p></p>
            If start_date occurs after end_date, DAYS360 returns a negative number. 
            Dates should be entered by using the DATE function, or as results of other formulas or functions. 
            For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.
            <p></p>
            Method is a logical value that specifies whether to use the U.S. or European method in the calculation:
            <p></p><t></t>
            FALSE or omitted U.S. (NASD) method. If the starting date is the 31st of a month, it becomes equal to the 30th of the same month. If the ending date is the 31st of a month and the starting date is earlier than the 30th of a month, the ending date becomes equal to the 1st of the next month; otherwise the ending date becomes equal to the 30th of the same month. 
            <p></p><t></t>
            TRUE European method. Starting dates and ending dates that occur on the 31st of a month become equal to the 30th of the same month. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDays360.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDays360.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDays360.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDays360.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDay">
            <summary>
            Returns the day of a date value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDay.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDay.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDay.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDay.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMonth">
            <summary>
            Returns the month of a date value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMonth.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMonth.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMonth.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMonth.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionYear">
            <summary>
            Returns the year of a date value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionYear.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionYear.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionYear.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionYear.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionHour">
            <summary>
            Returns the hour of a time value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionHour.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionHour.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionHour.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionHour.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinute">
            <summary>
            Returns the minute of a time value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinute.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinute.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinute.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMinute.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSecond">
            <summary>
            Returns the second of a time value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSecond.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSecond.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSecond.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionSecond.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow">
            <summary>
            Returns a .NET DateTime ticks value of the current day and time
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow.IsAlwaysDirty">
            <summary>
            Indicates whether the results of the function is always dirty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNow.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTimeValue">
            <summary>
            Returns the .Net DateTime of the time represented by time formated in a string
            </summary>
            <remarks>
            <p class="body">
            TIMEVALUE(time_text)
            <p></p>
            Time_text is text that represents a date in the .NET DateTime format
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTimeValue.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTimeValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTimeValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTimeValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTime">
            <summary>
            Returns the .NET DateTime ticks value that represents a particular time
            </summary>
            <remarks>
            <p class="body">
            TIME(hour,minute,second)
            <p></p>
            Hour is a number representing the time's hour
            <p></p>
            Minute is a number representing the time's minute
            <p></p>
            Second is a number representing the time's second
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTime.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTime.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTime.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionTime.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMedian">
            <summary>
            Returns the median of a set of values. The median is the value at the center of an ordered set.
            For example, the median of the set 1,2,3 is 2.  If the set has an even number of members then the
            median is the average of the two numbers in the middle.  For example, the median of the set 1,2,3,4 
            is 2.5.
            </summary>
            <remarks>
            <p class="body">
            MEDIAN(number1,number2,...)
            <p></p>
            Number1, number2, ...    are 1 to 30 numbers for which you want to find the median value. 
            <p></p>
            You can specify arguments that are numbers or references. 
            Text and blank cells are ignored.
            If any argument contains an error value, then the result is the first error value encountered.
            There must be at least one number in the set, otherwise an error result is returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMedian.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMedian.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMedian.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionMedian.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar">
            <summary>
            Estimates the variance based on a sample. 
            </summary>
            <remarks>
            <p class="body">
            VAR(number1,number2,...)
            <p></p>
            Number1, number2, ...    are 1 to 30 argments specifying a sample of a population. 
            <p></p>
            You can specify arguments that are numbers or references. 
            Text and blank cells are ignored.
            If any argument contains an error value, then the result is the first error value encountered.
            There must be at least one number in the set, otherwise an error result is returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar.CalculateVariance(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Estimates the variance based on a sample.
            </summary>
            <param name="numberStack">Number stack to evaluate</param>
            <param name="argumentCount">Number of arguments on the stack to use</param>
            <returns>A boolean indicating if the value was calculated</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionVar.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionStdev">
            <summary>
            Estimates the standard deviation based on a sample. 
            </summary>
            <remarks>
            <p class="body">
            STDEV(number1,number2,...)
            <p></p>
            Number1, number2, ...    are 1 to 30 argments specifying a sample of a population. 
            <p></p>
            You can specify arguments that are numbers or references. 
            Text and blank cells are ignored.
            If any argument contains an error value, then the result is the first error value encountered.
            There must be at least one number in the set, otherwise an error result is returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionStdev.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionStdev.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionStdev.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionStdev.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionType">
            <summary>
            Returns the type of value
            </summary>
            <remarks>
            <p class="body">
            TYPE(value)
            <p></p>
            Value is a number 
            <p></p>
            If value is:
            Number, TYPE returns 1 
            Text, TYPE returns 2
            Logical, TYPE returns 4
            Error, TYPE returns 16
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionType.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionType.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionType.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionType.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionErrorType">
            <summary>
            Returns the type of error value
            </summary>
            <remarks>
            <p class="body">
            ERRORTYPE(error_value)
            <p></p>
            Error_val is the error value whose identifying number you want to find
            <p></p>
            If error_value is:
            #NULL!,  ERROR.TYPE returns 1 
            #DIV/0!, ERROR.TYPE returns 2 
            #VALUE!, ERROR.TYPE returns 3 
            #REF!,   ERROR.TYPE returns 4 
            #NAME?!,   ERROR.TYPE returns 5 
            #NUM!,   ERROR.TYPE returns 6 
            #N/A!,   ERROR.TYPE returns 7 
            Anything else, ERROR.TYPE returns #N/A 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionErrorType.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionErrorType.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionErrorType.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionErrorType.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNa">
            <summary>
            Returns the error value #N/A
            </summary>
            <remarks>
            <p class="body">
            NA()
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNa.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNa.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNa.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNa.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsBlank">
            <summary>
            Returns TRUE if value is blank
            </summary>
            <remarks>
            <p class="body">
            IsBlank(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsBlank.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsBlank.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsBlank.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsBlank.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsErr">
            <summary>
            Returns TRUE if value refers to any error value except #N/A
            </summary>
            <remarks>
            <p class="body">
            IsErr(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsErr.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsErr.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsErr.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsErr.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsError">
            <summary>
            Returns TRUE if value refers to any error value (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!)
            </summary>
            <remarks>
            <p class="body">
            IsError(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsError.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsError.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsError.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsError.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsLogical">
            <summary>
            Returns TRUE if value refers to a logical value
            </summary>
            <remarks>
            <p class="body">
            IsLogical(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsLogical.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsLogical.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsLogical.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsLogical.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNa">
            <summary>
            Returns TRUE if value refers to the #N/A (value not available) error value
            </summary>
            <remarks>
            <p class="body">
            IsNA(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNa.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNa.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNa.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNa.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNonText">
            <summary>
            Returns TRUE if value refers to any item that is not text.
            </summary>
            <remarks>
            <p class="body">
            IsNonText(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNonText.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNonText.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNonText.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNonText.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNumber">
            <summary>
            Returns TRUE if value refers to a number
            </summary>
            <remarks>
            <p class="body">
            IsNumber(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNumber.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNumber.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNumber.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNumber.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsRef">
            <summary>
            Returns TRUE if value refers to a reference
            </summary>
            <remarks>
            <p class="body">
            IsRef(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsRef.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsRef.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsRef.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsRef.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsText">
            <summary>
            Returns TRUE if value refers to a text value
            </summary>
            <remarks>
            <p class="body">
            IsText(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsText.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsText.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsText.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsText.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsEven">
            <summary>
            Returns TRUE if value is an even number, else return false
            </summary>
            <remarks>
            <p class="body">
            IsEven(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsEven.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsEven.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsEven.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsEven.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsOdd">
            <summary>
            Returns TRUE if value is an odd number, else return false
            </summary>
            <remarks>
            <p class="body">
            IsOdd(value)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsOdd.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsOdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsOdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsOdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIRR">
            <summary>
            Returns the internal rate of return for a series of cash flows represented by the numbers in values.
            </summary>
            <remarks>
            <p class="body">
            IRR(values,guess)
            <p></p>
            values is a column or range reference that contain a collection of payment (negative values) and income (positive values) 
            values that occur at regular intervals.  These values must contain at least one positive and one negative value.
            <p></p>
            guess is an optional number that you guess is close to the result.  If guess is unspecified, 10% is used.
            IRR uses an iterative algorythm.  If it can't converge on a result that's accurate to 0.00001% in 20 iterations then
            a #NUM error value is returned.  The algorythm may succeed with a different guess value.
            <p></p>
            Only numbers and text that can be convertied to numbers in the range or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIRR.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIRR.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIRR.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIRR.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRate">
            <summary>
            Returns the interest rate per period of an annuity.
            </summary>
            <remarks>
            <p class="body">
            RATE(nper,pmt,pv,type,fv,guess)
            <p></p>
            Nper is the total number of payment periods in an annuity. For example, if you get a four-year car loan and make monthly payments, your loan has 4*12 (or 48) periods. You would enter 48 into the formula for nper.
            <p></p>																																																				  Pmt    is the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.
            Pmt is the payment made each period and cannot change over the life of the annuity.
            <p></p>																																																				  Pmt    is the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.
            Pv is the present value - the total amount that a series of future payments is worth now.
            <p></p>																																																				  Pmt    is the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.
            Type		is the number 0 or 1 and indicates whether payments are due at the end of the period (default) or the beginning.
            <p></p>																																																				  Pmt    is the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.
            Fv		is the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0). For example, if you want to save $50,000 to pay for a special project in 18 years, then $50,000 is the future value. You could then make a conservative guess at an interest rate and determine how much you must save each month. If fv is omitted, you must include the pmt argument.  The default value for fv is 0.
            <p></p>
            guess is an optional number that you guess is close to the result.  If guess is unspecified, 10% is used.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRate.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionRate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNull">
            <summary>
            Returns a boolean indicating if the value is null (Nothing in VB).
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNull.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNull">
            <summary>
            Returns a null value (Nothing in VB)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNull.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsDBNull">
            <summary>
            Returns a boolean indicating if the value is DBNull.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsDBNull.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsDBNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsDBNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionIsDBNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDBNull">
            <summary>
            Returns DBNull
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDBNull.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDBNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDBNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDBNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateAdd">
            <summary>
            Returns a <see cref="T:System.DateTime"/> value resulting from adding a specified interval to a DateTime.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateAdd.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateAdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateAdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateAdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateDiff">
            <summary>
            Returns a value specifying the number of time intervals between two DateTime values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateDiff.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateDiff.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateDiff.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionDateDiff.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionChar">
            <summary>
            Returns the character specified by the code number from the character set for your computer.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionChar.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionChar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionChar.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionChar.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCode">
            <summary>
            Returns a numeric code for the first character in a text string, in the character set used by your computer.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCode.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCode.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCode.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionCode.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFixed">
            <summary>
            Rounds a number to the specified number of decimals and returns the result as text with or without commas.
            </summary>
            <remarks>
            <p class="body">
            FIXED( number, decimals, no_commas )
            <p></p>
            <b>number</b>:  The number you want to round and convert to text.
            <p></p>
            <b>decimals</b>:  The number of digits to the right of the decimal point in the return value.  If this value is negative, 'number' is rounded to the left of the decimal point. The default value is 2.
            <p></p>
            <b>no_commas</b>:  Pass TRUE if commas should not be in the return value.  If commas should appear in the return value then you can pass FALSE or simply omit this argument.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFixed.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFixed.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFixed.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFixed.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday">
            <summary>
            Returns the current date.  No arguments are passed to this function.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday.Evaluate(Infragistics.WebUI.CalcEngine.UltraCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday.IsAlwaysDirty">
            <summary>
            Indicates whether the results of the function is always dirty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionToday.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory">
            <summary>
            Class used to manage the stock and user defined <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/> instances.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.Add(Infragistics.WebUI.CalcEngine.UltraCalcFunction)">
            <summary>
            Adds the specified function to the function list.
            </summary>
            <param name="function">Function to add</param>
            <returns>A boolean indicating if the function was added.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.AddLibrary(System.String)">
            <summary>
            Adds a library of user defined functions contained in an assembly specified by the given file path.
            </summary>
            <param name="pathAssembly">Path to assembly containing user defined functions</param>
            <returns>True if the function library was successfully loaded and its functions registered, else false</returns>
            <remarks>
            <p class="body">
            Once the assembly is loaded, any type that derives from <b>UltraCalcFunction</b> will be registered with the function factory
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.AddLibrary(System.Reflection.Assembly)">
            <summary>
            Adds a library of user defined functions contained in the given assembly.
            </summary>
            <param name="assembly">Loaded assembly containing a library of user defined functions</param>
            <remarks>
            <p class="body">
            Once the assembly is loaded, any type that derives from <b>UltraCalcFunction</b> will be registered with the function factory
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.GetOperator(Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction)">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/> for the specified operator enumeration
            </summary>
            <param name="operatorType">Operator whose function should be returned.</param>
            <returns>The <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/> associated with the specified enumeration.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.SetOperator(Infragistics.WebUI.CalcEngine.UltraCalcOperatorFunction,Infragistics.WebUI.CalcEngine.UltraCalcFunction)">
            <summary>
            Replaces the <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/> for the specified operator enumeration with the specified function
            </summary>
            <param name="operatorType">Operator whose function should be returned.</param>
            <param name="function">Function used when compiling that operator.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFunctionFactory.Item(System.String)">
            <summary>
            Returns the function with the specified name
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack">
            <summary>
            Stack of UltraCalcValues used to evaluate formulas.  
            </summary>
            <remarks>
            <p class="body">
            The number stack is used by the <b>UltraCalcFormula</b> class to evaluate formulas.  When formulas are compiled, the formula tokens are 
            placed in a collection in post-fix, or Reverse Polish Notation (RPN) format.  RPN format arranges the formula token list so each 
            sub-expressions's terms are placed before their operator, and sub-expressions are ordered to enforce correct operator precedence.
            This format allows the formula evaluate method to loop through the formula token collection front to back pushing an operator's terms onto 
            the number stack until an operator is reached.  Each time an operator is reached, it's subexpression is computed and resulting value pushed 
            onto the number stack.  Once the end of the end of the formula collection is reached, the formulas calculated value is at the top of the 
            number stack.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack"/>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Push(Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Push a value onto number stack.
            </summary>
            <param name="value">Value to push onto the number stack</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Pop">
            <summary>
            Pop value off top of the number stack.
            </summary>
            <returns>UltraCalcValue that was at the top of the number stack.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Peek">
            <summary>
            Return value off top of the number stack.
            </summary>
            <returns>UltraCalcValue that is at the top of the number stack.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Clear">
            <summary>
            Remove all values from number stack.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Reset(System.Int32)">
            <summary>
            Clear elements off top of number stack until it contains given number of elements
            </summary>
            <param name="elements">Denotes the desired stack level</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberStack.Count">
            <summary>
            Return the number of values on number stack
            </summary>
            <returns>Number of stack values</returns>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection">
            <summary>
            Manages a collection of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> objects
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection"/>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection"/> from another reference collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Merge(Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection)">
            <summary>
            Adds the contents of the specified <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection"/> into this instances collection.
            </summary>
            <param name="merge">Collection whose contents should be merged with this list.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Add(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Add an <b>IUltraCalcReference> elements to the collection</b>
            </summary>
            <param name="reference">Element to add to collection</param>
            <returns>Ordinal Position within collection where element was inserted </returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Insert(System.Int32,Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Insert an <b>IUltraCalcReference> elements to the collection</b>
            </summary>
            <param name="pos">Ordinal postion to insert reference</param>
            <param name="reference">Reference element to be inserted into collecction</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Remove(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Remove <b>IUltraCalcReference</b> element from collection
            </summary>
            <param name="reference">Element to be removed from collection</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.RemoveAt(System.Int32)">
            <summary>
            Remove element at given postion from collection
            </summary>
            <param name="pos">Ordinal index denoting element to remove</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.IndexOf(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Return ordinal index of given element
            </summary>
            <param name="reference">Element whose position is desired</param>
            <returns>Ordinal index of reference</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copys the collection to an array.
            </summary>
            <param name="array">Array used for the desitnation of the copy.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.GetEnumerator">
            <summary>
            Returns the collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Item(System.Int32)">
            <summary>
            Indexer method that returns a <b>IUltraCalcReference</b> by position
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.IsSynchronized">
            <summary>
            Denotes whether the collection is thread-safe.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.Count">
            <summary>
            Returns a number of elements in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceCollection.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunction">
            <summary>
            Abstract base class used to extend fomula function table with user defined functions.
            </summary>
            <remarks>
            <p class="body">
            User defined functions may be developed and registered with an <b>UltraWebCalcManager</b> instance by extending this class.  
            Additionally, user defined classes must provide implmentations for the <b>UltraCalcFunction</b> class from which this class derives.  
            Individual user defined functions, or entire function libraries packaged in assemblies, must be registered with the <b>UltraWebCalcManager</b>
            before being referenced by formulas.  
            See the <b>AddFunction</b> and <b>AddFunctionLibrary</b> methods on the <b>UltraCalcEngine</b> class to register user defined functions.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory">
            <summary>
            This class manages the list of user defined formula functions available in UltraCalc as well as methods to locate and instaniate function classes.
            </summary>
            <remarks>
            <p class="body">
            Users can develop custom formula functions that extend the list of built-in functions managed by the <b>UCFunctionFactory</b>.  
            A user defined function must extend the <b>UltraCalcUserDefinedFunction</b> abstract base class and provide an implementation of its abstract methods.
            Once developed, the function can be registered with the <b>UltraCalcUserDefinedFunctionFactory</b> and the factory can be associated with an instance of 
            the <b>UltraCalcEngine</b> to allow formulas referenced these functions.  Once built, user defined functions can be registered individually, or 
            a library of user defined functions packaged in an .NET assembly can be registered.  See the <b>UltraCalcEngine.AddFunction</b> and 
            <b>UltraCalcEngine.AddFunctionLibrary</b> methods.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.Find(System.Type)">
            <summary>
            Method used to return the function descriptor given the function type
            </summary>
            <param name="type">Type of function whose function descriptor should be returned.</param>
            <returns>UltraCalcFunctionDescriptor instance</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.AddLibrary(System.String)">
            <summary>
            Adds a library of user defined functions contained in an assembly specified by the given file path.
            </summary>
            <param name="pathAssembly">Path to assembly containing user defined functions</param>
            <returns>True if the function library was successfully loaded and its functions registered, else false</returns>
            <remarks>
            <p class="body">
            Once the assembly is loaded, any type that derives from <b>UltraCalcUserDefinedFunction</b> will be registered with the function factory
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.AddLibrary(System.Reflection.Assembly)">
            <summary>
            Adds a library of user defined functions contained in the given assembly.
            </summary>
            <param name="asmUDF">Loaded assembly containing a library of user defined functions</param>
            <returns>True if the function library was successfully registered, else false</returns>
            <remarks>
            <p class="body">
            Once the assembly is loaded, any type that derives from <b>UltraCalcUserDefinedFunction</b> will be registered with the function factory
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.AddFunction(Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunction)">
            <summary>
            Adds user defined function to the function factory
            </summary>
            <param name="function">User defined function instance</param>
            <returns>True if the function was successfully added, else false</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.Match(System.String,System.Int32)">
            <summary>
            Returns a user defined function instance for the given name and argument arity
            </summary>
            <param name="name">Function name</param>
            <param name="argCount">Number of function arguments</param>
            <returns><b>UltraCalcUserDefinedFunction</b> class instance for the given function name and arity</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcUserDefinedFunctionFactory.Item(System.String)">
            <summary>
            Returns the <b>UCFunctionDecriptor</b> for a function given its name.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.#ctor(System.Int32,System.Single)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.Add(System.Object)">
            <summary>
            Adds the item to the set. If the item already exists in the set, does nothing.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.Remove(System.Object)">
            <summary>
            Removes the specified item from the set. If the item doesn't exist in the set
            does nothing.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.Exists(System.Object)">
            <summary>
            Returns true if the specified item exists in this set.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.AddItems(Infragistics.WebUI.CalcEngine.HashSet)">
            <summary>
            Adds items from the specified set to this set.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.GetUnion(Infragistics.WebUI.CalcEngine.HashSet,Infragistics.WebUI.CalcEngine.HashSet)">
            <summary>
            Calculates the union of the specified sets.
            </summary>
            <param name="set1"></param>
            <param name="set2"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.GetIntersection(Infragistics.WebUI.CalcEngine.HashSet,Infragistics.WebUI.CalcEngine.HashSet)">
            <summary>
            Calculates the intersection of the specified sets.
            </summary>
            <param name="set1"></param>
            <param name="set2"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.DoesIntersect(Infragistics.WebUI.CalcEngine.HashSet)">
            <summary>
            Returns true of the specified set and this set intersect.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.IsSubsetOf(Infragistics.WebUI.CalcEngine.HashSet)">
            <summary>
            Returns true if this set is a subset of the specified set.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.Clear">
            <summary>
            Clears the set.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.GetEnumerator">
            <summary>
            Returns a new enumerator that enumerates all the elements of this set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of this set to the spcified array starting at the specified index in the array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.HashSet.ToArray(System.Type)">
            <summary>
            Returns an array containing all the elements of this set.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.HashSet.Count">
            <summary>
            Returns the number of items contained in the set.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.HashSet.IsEmpty">
            <summary>
            Returns true if the set is empty, that is it has no elements.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.HashSet.IsSynchronized">
            <summary>
            Indicates whether this data structure is synchronized.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.HashSet.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize the access to this data structure.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceFormulaException">
            <summary>
            Exception signifying a failure when processing the UltraCalc <b>Formula</b> of
            a reference appearing on the recalc chain.
            </summary>
            <remarks>
            <p class="body">This exception is thrown when a custom <b>IUltraCalcReference</b>
            returns null (Nothing in Visual Basic .NET) from it's <b>Formula</b> property.
            All reference implementations that are dirtied and placed on the recalc chain
            must be associated with a non-null <b>IUltraCalcFormula</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceFormulaException.#ctor">
            <summary>
            Creates an instance of this exception with a default error message.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceFormulaException.#ctor(System.String)">
            <summary>
            Creates an instance of this exception with the designated error message.
            </summary>
            <param name="message">Error message text.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceFormulaException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an instance of this exception with the designated error message and inner exception.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">Exception underlying this <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceFormulaException"/>,
            often descriptive of the causal factor.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings">
            <summary>
            Serves as a bridge binding an ordinary <b>Control</b> on the <b>Page</b>
            with an <b>IUltraCalcReference</b> proxy created to represent a single
            value from that <b>Control</b> within the calculation network.
            </summary>
            <remarks>
            <p class="body">The <b>CalcSettings</b> objects bind ordinary <b>Control</b>
            instances from the <b>Page</b> to proxy implementations of <b>IUltraCalcReference</b>
            that expose a single-value of the <b>Control</b> to the calculation network.  The
            _CALCMANAGER_ maintains the collection of these <b>CalcSettings</b> objects that
            can be referenced from the root of the calculation network, by their control ID or 
            <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Alias"/> (for example, a control with an ID of "TextBox1" would be
            referenceable from an UltraCalc formula expression as "[//TextBox1]").
            </p>
            <p class="body">The properties of this class allow developers to customize the
            binding to the <b>Control</b> they wish to extend.  Change the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/>
            to alter the property on the target <b>Control</b> that receives a value from the
            calculation network, or sends a value to the calculation network.  Assign a
            <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Formula"/> to indicate that the extended <b>Control</b> is supposed
            to receive a value from the calculation network, where that value is the result
            of evaluating the specified <b>Formula</b>.  Set the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ErrorValue"/>
            to an object reference that will be assigned to <b>PropertyName</b> when the
            formula evaluates to an error.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.#ctor">
            <summary>
            Creates a default instance of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>, with all properties
            initialized to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.#ctor(System.String,System.Object,System.String,System.String)">
            <summary>
            Creates a default instance of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>, with all properties
            initialized to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.#ctor(System.String,System.Object,System.String,System.String,System.Type)">
            <summary>
            Creates an instance of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> with properties initialized to
            the supplied values.
            </summary>
            <param name="alias">An alias name by which the target control is known.</param>
            <param name="errorValue">An error value assigned to <i>propertyName</i> in event
            of an error.</param>
            <param name="formula">The formula string used to calculate the value of <i>propertyName</i>.
            </param>
            <param name="propertyName">The name of the property receiving the calculated value,
            also the source property of the value this <i>alias</i>ed control is known by when
            it is referenced by external formulas.</param>
            <param name="treatAsType">The CLR <b>Type</b> which UltraCalc should treat <i>propertyName</i>
            as being when reading the value. For instance, <i>propertyName</i> may refer to a
            <b>String</b> property like the <b>Text</b> of a <b>TextBox</b>, but through this
            argument the engine can attempt to coerce the value into the desired <b>Type</b>
            so that it's interpretation is what was intended.)</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerializeFormula">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Formula"/> property has changed, and should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ResetFormula">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Formula"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerializePropertyName">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/> property has changed, and should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ResetPropertyName">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerializeAlias">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Alias"/> property has changed, and should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ResetAlias">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Alias"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerializeErrorValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ErrorValue"/> property has changed, and should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ResetErrorValue">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ErrorValue"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Reset">
            <summary>
            Resets all CalcSettings properties to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerialize">
            <summary>
            Indicates if any properties have changed, and an instance of this object should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ToString">
            <summary>
            Converts the CalcSettings to a string.
            </summary>
            <returns>
            A string representation of this CalcSettings instance,
            primarily intended for display at design-time or for
            troubleshooting.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ShouldSerializeTreatAsType">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.TreatAsType"/> property has changed, and should be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ResetTreatAsType">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.TreatAsType"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            This notification occurs when the <b>CalcSettings</b> is added to a collection.
            </summary>
            <param name="primaryCollection">
            Parent collection from which the <b>CalcSettings</b> was added.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>primaryCollection</i> is null
            (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            This notification occurs when the CalcSettings is removed from a collection.
            </summary>
            <param name="primaryCollection">
            Parent collection from which the CalcSettings was removed.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.OnLoadViewState(System.Object)">
            <summary>
            Called when the viewstate is being loaded on the _CALCMANAGER_.
            </summary>
            <param name="savedState">An object containing state information
            that has been rehydrated from the persistence medium.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.OnSaveViewState">
            <summary>
            Called when the viewstate is being saved from the _CALCMANAGER_.
            </summary>
            <returns>An object containing state information
            that will be hydrated onto the persistence medium.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.OnTrackViewState(System.Boolean)">
            <summary>
            Called when the viewstate tracking is activated for the _CALCMANAGER_.
            </summary>
            <param name="oldTrackingState">The state of <see cref="!:IsTrackingViewState"/>
            prior to <see cref="!:TrackViewState"/> having been called, for informational
            purposes.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.CompileFormula">
            <summary>
            Compiles the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Formula"/> associated with these calculation settings.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Formula">
            <summary>
            The Formula which will be used to set the value of this object.
            </summary>
            <remarks>
            <p class="body">The Formula property will be used to calculate a value and that value will be set on a property of the control as indicated by the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/> property.  If <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/> has not been set or is set to an invalid property, then no calculation will take place.</p>
            <p class="note">It is strongly recommended that any element with a formula be marked ReadOnly.  A control that is the target of a formula calculation should not be edited by the end user, because any user-edited value will be overwritten by the calculated value.  Also, if an element is used as both the target and the source of a formula, then the source value will always use the calculated value and not the value displayed in the control after a user's edit.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName">
            <summary>
            The name of the property which will be the recipient of the Formula, if set.
            </summary>
            <remarks>
            <p class="body">Also, this propery is what will be read from the control when
            this control is used as the source value for a calculation.  A <b>UITypeEditor</b>
            allows only properties marked <b>Bindable</b> to be specified here.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Alias">
            <summary>
            An alias name that can be used to reference the control.
            </summary>
            <remarks>
            <p class="body">
            Will resolve to the name of the control at run-time.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.AliasResolved">
            <summary>
            The alias for the control at run-time.  If the alias is null (Nothing in Visual Basic .NET) or empty,
            the name of the control's property. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.ErrorValue">
            <summary>
            The value to be set on <b>PropertyName</b> in case of an error during calculation.
            </summary>
            <remarks>
            <p class="body">If any calculation or reference error occurs during a calculation,
            <b>ErrorValue</b> can be used to specify a default value for rendering or storage
            into the underlying property.  This value is assigned to the appropriate property
            of the <see cref="!:Context"/> element.  For example, in the case of a
            <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemWebUIWebControlsTextBoxClassTopic.htm">TextBox</a>'s
            <b>Text</b> property, the property itself will be set to the error value so that
            it both displays in the <b>TextBox</b> and is saved if the <b>Text</b> property
            is databound. In the case of an <b>UltraGridCell</b>, this value will not be
            rendered, but it will be saved to the underlying data source if bound.
            Properties that are not used to render or bind, such as a <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>,
            must ignore the <b>ErrorValue</b>.</p>
            <p class="body">The datatype of any value assigned to <b>ErrorValue</b> must
            be compatible with the datatype of the target control's property identified
            by <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/>, or converted to a compatible type through
            handling the <see cref="!:_CALCMANAGER_.FormatValue">FormatValue</see> event.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.TreatAsType">
            <summary>
            Gets or sets a Type to use for conversion purposes when the _CALCMANAGER_ interprets the value from the Control.
            </summary>
            <remarks> 
            <p class="body">TreatAsType is useful if you are using values in a calculation that are not necessarily in the native type for the formula. For example, if a TextBox control's Text property is being used to enter a numeric value, the _CALCMANAGER_ by default converts the contents of the TextBox to a Double using the Invariant Culture. This may not always be the desired effect. Setting TreatAsType to double in this example would convert the Text of the TextBox to a Double using the Invariant Culture before passing the value on to the _CALCMANAGER_.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Value">
            <summary>
            Gets the value which will be used as the source in any calculations involving the element.
            </summary>
            <remarks>
            <p class="body">Value returns the current value that any calculations referencing the element will use.  If the element is the target of a formula, then this will be the last calculated value.</p>
            <p class="note">Note that the value may be an UltraCalcValueError.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Infragistics#WebUI#CalcEngine#IFormulaProvider#Reference">
            <summary>
            Associated UltraCalc reference object.
            </summary>
            <remarks>
            <p class="body">In the case of an extended Control, this will be a proxy <b>IUltraCalcReference</b>
            implementation that <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> binds to the property identified by <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName"/>.
            </p>
            <p class="body">This property is only intended for use at design-time. It is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Infragistics#WebUI#CalcEngine#IFormulaProvider#Participant">
            <summary>
            Returns the participant.
            </summary>
            <value>This property always returns null (Nothing in Visual Basic .NET).</value>
            <remarks>
            <p class="body">This property is not used by <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Infragistics#WebUI#CalcEngine#IFormulaProvider#CalcManager">
            <summary>
            Returns the _CALCMANAGER_ associated with the extended control participating
            in the UltraCalc network through <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>.
            </summary>
            <remarks>
            <p class="body">This property is only intended for use at design-time. It is Read Only.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsConverter">
            <summary>
            CalcSettingsConverter
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.PropertyNameUITypeEditor">
            <summary>
            UITypeEditor for the PropertyName property of a CalcSettings.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection">
            <summary>
            Collection containing the <b>UltraWebCalcManager</b>'s <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> objects.
            </summary>
            <remarks>
            <seealso cref="!:UltraWebCalcManager.CalcSettings"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.#ctor(Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager)">
            <summary>
            Creates a new collection for a given <b>UltraWebCalcManager</b>.
            </summary>
            <param name="calcManager">The <b>UltraWebCalcManager</b> to whom
            this newly-created collection belongs.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Add(System.Web.UI.Control,Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Adds a setting to the collection.
            </summary>
            <param name="control">The Control represented by <i>item</i>.</param>
            <param name="item">A CalcSettings instance representing <i>control</i>
            as a reference in the Calc network.</param>
            <returns>The zero-based index at which <i>item</i> was added to the
            collection.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>item</i>
            is passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Add(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Adds a setting to the collection.
            </summary>
            <param name="item">A CalcSettings instance representing a control
            that must be added to the collection; it's <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.Control">Control</see>
            property should be pre-initialized.</param>
            <returns>The zero-based index at which <i>item</i> was added to the
            collection, or -1 if <i>item</i> could not be added because it was
            null (Nothing in Visual Basic .NET).</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Contains(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Determines if the collection contains the given setting.
            </summary>
            <param name="item">A CalcSettings to test for membership in
            this collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains the given setting.
            </summary>
            <param name="itemKey">The key (usually <b>UniqueID</b>
            of the <b>Control</b> it represents) of a CalcSettings
            to test for membership in this collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.IndexOf(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Gets the index of the given setting.
            </summary>
            <param name="item">The settings to be search for.</param>
            <returns>The index at which the first matching <i>item</i> exists
            within the collection, otherwise -1 if no match could be found.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>item</i>
            is passed in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Inserts the given setting to the collection at the given index.
            </summary>
            <param name="index">Zero-based index at which to insert the settings.</param>
            <param name="item">The settings to be inserted into this collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Remove(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Removes the given setting from the collection.
            </summary>
            <param name="item">The settings to be removed from this collection.</param>
            <remarks>
            <p class="body">This method has no effect if <i>item</i> doesn't exist
            within the collection.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>item</i> is
            passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Notification method called after a new settings has been
            added or inserted into the collection.
            </summary>
            <param name="i">The zero-based index at which <i>val</i>
            was inserted.</param>
            <param name="val">A CalcSettings instance that has been
            inserted into this collection.</param>
            <remarks>
            <p class="body">This method does some initializations to
            ensure the newly added settings object is consistent with
            the other settings already in this collection.</p>
            <p class="body">Inheritors who override this method must
            remember to call the base method implementation first.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnInit">
            <summary>
            Called when the Init event of the _CALCMANAGER_ component occurs.
            </summary>
            <param name="args">Arguments for the init event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnLoad">
            <summary>
            This notification is passed onto the Calc Settings Collection
            by its <b>Owner</b> when the <b>Load</b> event has fired signaling
            all elements have been loaded and should be available for referencing.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnLoadViewState(System.Object)">
            <summary>
            Called when the viewstate is being loaded on the _CALCMANAGER_.
            </summary>
            <param name="savedState">An object containing state information
            that has been rehydrated from the persistence medium.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnSaveViewState">
            <summary>
            Called when the viewstate is being saved from the _CALCMANAGER_.
            </summary>
            <returns>An object containing state information
            that will be hydrated onto the persistence medium.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.OnTrackViewState(System.Boolean)">
            <summary>
            Called when the viewstate tracking is activated for the _CALCMANAGER_.
            </summary>
            <param name="oldTrackingState">The state of <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.IsTrackingViewState"/>
            prior to <see cref="!:TrackViewState"/> having been called, for informational
            purposes.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.IsReadOnly">
            <summary>
            Indicates whether the contents of this collection cannot be changed.
            </summary>
            <value>Returns false.</value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.AllowDuplicateKeys">
            <summary>
            Indicates whether duplicate keys are allowed in this collection.
            </summary>
            <value>Returns true.</value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.AllowEmptyKeys">
            <summary>
            Indicates whether empty keys are allowed in this collection.
            </summary>
            <value>Returns false.</value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.Item(System.Object)">
            <summary>
            The indexer for this collection. Read Only.
            </summary>
            <value>The settings at a particular zero-based index, or
            having a specific key, within the collection. If no settings
            were found for the index or key, then this indexer has a value
            of null (Nothing in Visual Basic .NET).</value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettingsCollection.IsTrackingViewState">
            <summary>
            Indicates whether the Named References Collection is currently tracking viewstate
            for it's Named References.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.FormulaErrorBaseEventArgs.#ctor(System.Object,System.Object,Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            Enables inheritors to initialize members of the base class.
            </summary>
            <param name="ctx">Context object that helps to identify where
            the error occurred.</param>
            <param name="errDisp">The value to display for the error.</param>
            <param name="val">The value to store in the <b>IUltraCalcReference</b>
            implementation in event of an error.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaErrorBaseEventArgs.Context">
            <summary>
            Context identifying an underlying domain-specific object where the
            error has occurred.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaErrorBaseEventArgs.ErrorValue">
            <summary>
            Error value intended for storage in the reference object.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaErrorBaseEventArgs.ErrDisplay">
            <summary>
            Error value intended for display by the reference object.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcFrequency">
            <summary>
            Determines how frequently the calculations are done by the _CALCMANAGER_.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcFrequency.Asynchronous">
            <summary>
            Calculations will be performed on a timer. This frees the UI Thread, but means that calculations may not always be current.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcFrequency.Synchronous">
            <summary>
            Calculations are performed every time a change notification is received. That is, every time a value involved in a calculation is change, all dirtied calculations are recalculated and the UI thread is locked until all calculations are complete.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcFrequency.Manual">
            <summary>
            _CALCMANAGER_ never performs any calculations until the Recalc method is explicitly invoked. 
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds">
            <summary>
            Uniquely identifies each _CALCMANAGER_ event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.CalculationsCompleted">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.CalculationsCompleted"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.FormulaSyntaxError">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.FormulaSyntaxError"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.FormulaReferenceError">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.FormulaReferenceError"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.FormulaCalculationError">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.FormulaCalculationError"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.FormulaCircularityError">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.FormulaCircularityError"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.ParseValue">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.ParseValue"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.FormatValue">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.FormatValue"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.NamedReferenceResultChanged">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.NamedReferenceResultChanged"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.ValueDirtied">
            <summary>
            Event id that identifies <see cref="!:_CALCMANAGER_.ValueDirtied"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds.LastEventId">
            <summary>
            Keep the last event id used.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups">
            <summary>
            Categorizes _CALCMANAGER_ specific events into groupings to permit easier identification of multiple events.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups.AllEvents">
            <summary>
            Covers all events.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups.ErrorEvents">
            <summary>
            Covers the <b>FormulaSyntaxError</b>, <b>FormulaReferenceError</b>, <b>FormulaCalculationError</b> and <b>FormulaCircularityError</b> events.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction">
            <summary>
            Indicates which type of action took place to dirty the calculation network.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.ReferenceAdded">
            <summary>
            A reference was added to the calculation network.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.ReferenceRemoved">
            <summary>
            A reference was removed the calculation network. Note that in this case the formula associated with the reference is also removed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.RowReferenceAdded">
            <summary>
            A row reference was added to the calculation network. A row reference is differnet from a regular reference because it refers to an item in a collection such as an UltraGridRow.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.RowReferenceRemoved">
            <summary>
            A row reference was removed the calculation network. Note that in this case the formula associated with the reference is also removed. A row reference is different from a regular reference because it refers to an item in a collection such as an UltraGridRow.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.RowsCollectionReferenceResynched">
            <summary>
            A rows collection reference was resynched.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.RowsCollectionReferenceSorted">
            <summary>
            A rows collection reference was sorted.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.RowsCollectionVisibilityChanged">
            <summary>
            The visibility of a row or rows in a rows collection has changed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.FormulaAdded">
            <summary>
            A Formula was added to the calculation network.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.FormulaRemoved">
            <summary>
            A Formula was removed from the calculation network.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction.ValueChanged">
            <summary>
            A Value in the calculation network has changed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager">
            <summary>
            Class for managing an _CALCMANAGER_'s events. It maintains an
            enabled flag for each event, a nested 'In Progress' counter, and
            it exposes methods for firing each event.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.#ctor(Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager)">
            <summary>
            Creates an instance of an Event Manager the administers events for an appointed _CALCMANAGER_.
            </summary>
            <param name="ultraCalcManager">An UltraCalcManager instance associated with this event manager.</param>
            <remarks>
            <p class="body">The <i>ultraCalcManager</i> is permanently attached to the Event Manager
            for the duration of the Event Manager's lifespan.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.InProgress(Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds)">
            <summary>
            Returns true if the event is in progress (in progress count > 0).
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.IsEnabled(Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds)">
            <summary>
            Indicates that the specified event is enabled.
            </summary>
            <param name="eventId">A <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds"/> indicating an individual event on which to determine the enabledness.</param>
            <returns>True if the event identified by <i>eventId</i> is enabled, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.SetEnabled(Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds,System.Boolean)">
            <summary>
            Sets a specific event to the enabled or disabled state.
            </summary>
            <param name="eventId">A <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventIds"/> indicating an individual event to enable/disable.</param>
            <param name="enabled">True to enable the event, false to disable it.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.IsEnabled(Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups)">
            <summary>
            Indicates every event in a group of events is enabled.
            </summary>
            <param name="group">A <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups"/> identifier indicating a group of events under management to check.</param>
            <returns>True if and only if all events within the event's group defined by <i>group</i> are enabled.
            Conversely, false when any event within the event set is disabled.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventManager.SetEnabled(Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups,System.Boolean)">
            <summary>
            Sets a group of events to the enabled or disabled state.
            </summary>
            <param name="group">A <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcManagerEventGroups"/> identifier indicating a group of events under management on which to change the enabled state.</param>
            <param name="enabled">True to enable these events, false to disable them.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaCalculationErrorEventHandler">
            <summary>
            Delegate for the <see cref="!:_CALCMANAGER_.FormulaCalculationError"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaSyntaxErrorEventHandler">
            <summary>
            Delegate for the <see cref="!:_CALCMANAGER_.FormulaSyntaxError"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaCircularityErrorEventHandler">
            <summary>
            Delegate for the <see cref="!:_CALCMANAGER_.FormulaCircularityError"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventHandler">
            <summary>
            Delegate for the <see cref="!:_CALCMANAGER_.ValueDirtied"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ParseValueEventHandler">
            <summary>
            Delegate for <see cref="!:_CALCMANAGER_.ParseValue"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormatValueEventHandler">
            <summary>
            Delegate for <see cref="!:_CALCMANAGER_.FormatValue"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferenceResultChangedEventHandler">
            <summary>
            Delegate for NamedReferenceResultChanged event of an UltraCalcManager.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ControlValueEventArgsBase">
            <summary>
            Base class for event arguments used in the <b>ParseValue</b> and <b>FormatValue</b> events.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.ControlValueEventArgsBase.#ctor(System.Web.UI.Control,System.Object)">
            <summary>
            Initializes base class properties.
            </summary>
            <param name="control">A calculable element extended using <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>.</param>
            <param name="originalValue">Original value of the formula result or property.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>control</i> is null (or Nothing
            in Visual Basic .NET).</exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ControlValueEventArgsBase.Control">
            <summary>
            Gets the extended Web element whose property is being read or written.
            </summary>
            <remarks>
            <p class="body">Developers specify a <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemWebUIControlClassTopic.htm">Control</a> to extend with UltraCalc functionality
            by assigning the Control's <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfsystemwebuicontrolclassuniqueidtopic.htm">UniqueID</a> to an instance of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> and adding those 
            settings to the _CALCMANAGER_ using <see cref="!:_CALCMANAGER_.SetUltraCalcSettings">SetUltraCalcSettings</see>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ControlValueEventArgsBase.Value">
            <summary>
            Gets/Sets the value which is being sent from the _CALCMANAGER_ to the calculable element, or from the calculable element to the _CALCMANAGER_.
            </summary>
            <remarks>
            <p class="body">In the case of the <see cref="!:_CALCMANAGER_.ParseValue">ParseValue</see> event, <b>Value</b> returns the value read from an element that has been extended to be calculable using <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/>. Changing the <b>Value</b> in an event handler for this event modifies _CALCMANAGER_'s interpretation of that value. For example, before formatting a number as "$5.00", it must be converted into a numeric value like "5.0".</p>
            <p class="body">In the case of the <see cref="!:_CALCMANAGER_.FormatValue">FormatValue</see> event, <b>Value</b> returns the value from the _CALCMANAGER_ that is about to be assigned to a property (identified by <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName">PropertyName</see> on the calculable element. Changing the <b>Value</b> in this case will assign the newly changed value to the control instead. So this can be used to change the value, the datatype, or simply to format the value to be rendered in a more user-friendly way.</p>
            <p class="body">If an application subscribes multiple event handlers to the <b>ParseValue</b> or <b>FormatValue</b> events of the same calculable element, then the effects of changing the <b>Value</b> property are undefined.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormatValueEventArgs">
            <summary>
            Event arguments for the <see cref="!:_CALCMANAGER_.FormatValue"/> event. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.FormatValueEventArgs.#ctor(System.Web.UI.Control,System.Object,System.Type,Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Creates an instance of the <b>FormatValueEventArgs</b> for use when subscribers are notified
            that a formula result can be formatted.
            </summary>
            <param name="control">The calculable element that is having a value written to one of it's properties.</param>
            <param name="originalValue">The original formula result prior to any formatting.</param>
            <param name="desiredType">The type expected by the property receiving this value.</param>
            <param name="calcValue">The calculated value as an <b>UltraCalcValue</b> variant.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormatValueEventArgs.DesiredType">
            <summary>
            Gets the type expected by the named property of the calculable element to which
            this formatted value is being stored.
            </summary>
            <remarks>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormatValueEventArgs.CalcValue">
            <summary>
            Gets the <b>UltraCalcValue</b> that was the formula result and is being used by the _CALCMANAGER_
            to assign a new value to one property of this calculable element. 
            </summary>
            <remarks>
            <p class="body">
            The <b>CalcValue</b> property offers developers access to the <b>UltraCalcValue</b> that is the
            source of the value being assigned by the _CALCMANAGER_ onto the <see cref="!:UltraCalcSettings.PropertyName">PropertyName</see>
            of <see cref="P:Infragistics.WebUI.UltraWebCalcManager.ControlValueEventArgsBase.Control">Control</see>.  Developers may use this property
            to detect special situations, like the occurrence of a calculation error, and format the value
            as may be appropriate for the application.</p>
            <p class="body">
            This property is Read Only.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaErrorEventArgs">
            <summary>
            Event arguments for the <see cref="!:_CALCMANAGER_.FormulaError"/> event.
            </summary>
            <remarks>
            <p class="body">An instance of the <b>FormulaErrorEventArgs</b> is created and
            thrown following a formula error during computational processing by the calculation
            engine.  At the time a developer handles the <see cref="!:_CALCMANAGER_.FormulaError">FormulaError</see>
            event on the <see cref="!:_CALCMANAGER_"/>, it is too late to remediate the error.
            However, the developer may take action based on notification of an error's having
            taken place.  Additionally, the developer may modify the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.FormulaErrorEventArgs.ErrorDisplayValue"/>
            to affect the manner in which the error is presented to the end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.FormulaErrorEventArgs.#ctor(System.Object,System.Web.UI.Control,System.Object,Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            Creates an instance of the FormulaErrorEventArgs in anticipation of being thrown
            in response to a formula error occuring during a calculation.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormulaErrorEventArgs.ErrorDisplayValue">
            <summary>
            Provides access to the ErrorDisplayValue that determines the displayed value
            to the end user.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormulaErrorEventArgs.Control">
            <summary>
            Gets the target WebControl this error is directed to.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferenceResultChangedEventArgs">
            <summary>
            Event arguments for the NamedReferenceResultChanged event of the _CALCMANAGER_.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferenceResultChangedEventArgs.#ctor(Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Creates new arguments for the NamedReferenceResultChanged event.
            </summary>
            <param name="namedReference">Named reference that has changed.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferenceResultChangedEventArgs.NamedReference">
            <summary>
            Gets the instance of the NamedReference with a changed value.
            </summary>		
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ParseValueEventArgs">
            <summary>
            Event arguments for the <see cref="!:_CALCMANAGER_.ParseValue"/> event. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.ParseValueEventArgs.#ctor(System.Web.UI.Control,System.Object)">
            <summary>
            Creates an instance of the <b>ParseValueEventArgs</b> for use when subscribers are notified
            that a value is being parsed.
            </summary>
            <param name="control">The calculable element that is having a value read from one of it's properties.</param>
            <param name="originalValue">The original value that was taken prior to parsing.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ParseValueEventArgs.Handled">
            <summary>
            Gets and sets whether the parsing was handled.
            </summary>
            <remarks>
            <p class="body">Set <b>Handled</b> to True to indicate that a parse was handled. This means that the <b>TreatAsType</b> property will be ignored for this conversion.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs">
            <summary>
            Base class for event arguments that have an associated <b>IUltraCalcReference</b>.
            </summary>
            <remarks>
            <p class="body">These arguments are received by developers who subscribe an event
            handler to the <see cref="!:_CALCMANAGER_.ValueDirtied"/> event.  It fires
            when the associated <b>IUltraCalcReference</b> identified by the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.CalcRef"/>
            property has become <i>dirty</i>.  Dirtiness implies either the value of that reference
            has changed directly, or the value(s) of one or more references it's value is dependent
            upon has changed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Creates an instance of the <b>ValueDirtiedEventArgs</b> in anticipation of
            it being thrown by the <see cref="!:_CALCMANAGER_.ValueDirtied"/> event
            when a value becomes dirtied within the calculation network.
            </summary>
            <param name="calcRef">The reference that has become dirty.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.#ctor(System.Object,Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedAction)">
            <summary>
            Creates an instance of the <b>ValueDirtiedEventArgs</b> in anticipation of
            it being thrown by the <see cref="!:_CALCMANAGER_.ValueDirtied"/> event
            when a value becomes dirtied within the calculation network.
            </summary>
            <param name="context">The underlying object that has become dirty.</param>
            <param name="action">The act of dirtying that takes place.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.CalcRef">
            <summary>
            Gets the <b>IUltraCalcReference</b> whose value is dirty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.Context">
            <summary>
            Gets the Context.
            </summary>
            <remarks><p class="body">The Context indicates the object which was changed. This can be any object that particpates in the Calc Network such an UltraGridCell, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs.Action">
            <summary>
            Gets a the action which occurred.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaSyntaxErrorEventArgs">
            <summary>
            Event args for FormulaSyntaxError event of an IUltraCalcManager.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.FormulaSyntaxErrorEventArgs.#ctor(System.Object,System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormulaSyntaxErrorEventArgs.DisplayErrorMessage">
            <summary>
            Gets / sets whether an error message is displayed to the end user.
            </summary>
            <remarks>
            <p class="body">Gets / sets whether to display an error message to the end user.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.FormulaCircularityErrorEventArgs">
            <summary>
            Event args for FormulaCircularityError event of an IUltraCalcManager.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.FormulaCircularityErrorEventArgs.#ctor(System.Object,System.String,System.Boolean)">
            <summary>
            Creates an instance of the <b>FormulaCircularityEventArgs</b> in anticipation of
            it being thrown by the <see cref="!:_CALCMANAGER_.FormulaCircularityError"/> event
            when a circular reference has been discovered in the calculation network.
            </summary>
            <param name="context">The context object involved with the circular reference.</param>
            <param name="errorDisplayText">The text of the message to be displayed.</param>
            <param name="displayErrorMessage">Whether any message should be displayed to the end user.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.FormulaCircularityErrorEventArgs.DisplayErrorMessage">
            <summary>
            Gets / sets whether an error message is displayed to the end user.
            </summary>
            <remarks>
            <p class="body">Gets / sets whether to display an error message to the end user.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo">
            <summary>
            Provides information about the _CALCMANAGER_ to the Designer.
            </summary>
            <remarks>
            <p class="body">This class is for internal infrastructure use only, and should not be used by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetReferenceTree">
            <summary>
            Returns a tree of ReferenceNodes which can be used for display in the Designer.
            </summary>
            <remarks>This property is for internal infrastrucure only and should not be used.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetUltraCalcReference(Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Returns the IUltraCalcReference associated with a NamedReference to the Designer.
            </summary>
            <remarks>
            <p class="body">
            This method is for internal infrastructure use only, and should not be used by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetUltraCalcReference(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Returns the IUltraCalcReference associated with a CalcSettings to the Designer.
            </summary>
            <remarks>
            <p class="body">
            This method is for internal infrastructure use only, and should not be used by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetUniqueFunctionCategories">
            <summary>
            Returns a list of categories based on all known functions both built-in and user-defined.
            </summary>
            <remarks>
            <p class="body">
            This method is for internal infrastructure use only, and should not be used by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetAllFunctions">
            <summary>
            Returns the function instances for all categories.
            </summary>
            <remarks>
            <p class="body">
            This method is for internal infrastructure use only, and should not be used by applications.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetUnassignedFunctions" -->
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.UltraWebCalcManager.Design.IDesignInfo.GetFunctions(System.String)" -->
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference">
            <summary>
            Named references provide a shorthand representation for much longer formulas.
            </summary>
            <remarks>
            <p class="body">Named references are shortened names that are expanded into
            their full formulas by the calculation engine.  Developers may assign a lengthy
            <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Formula"/> string to this <b>NamedReference</b>, and then assign a
            much shorter <b>Key</b> name which is used to refer to the formula in other
            formulas.</p>
            <p class="body">An example of a named reference is a constant.  For example,
            the named reference "PI" could have an underlying <b>Formula</b> value of
            22/7.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.#ctor">
            <summary>
            Creates an instance of the empty, unnamed reference.
            </summary>
            <remarks>
            <p class="body">The developer is responsible for assigning a unique
            name to its <b>Key</b> property to name the reference.  Until it has
            been named, <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.IsEmpty"/> shall return true and it cannot be
            added to a <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.#ctor(System.String)">
            <summary>
            Creates an uncategorized named reference without an underlying formula.
            </summary>
            <param name="key">The name of the reference, it can be used as shorthand
            within other formulas.</param>
            <remarks>
            <p class="body">The developer is responsible for assigning a formula to
            the named reference, otherwise an <b>UltraCalcErrorValue</b> of #NUL
            may occur if the named reference is used within another formula.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.#ctor(System.String,System.String)">
            <summary>
            Creates an uncategorized named reference.
            </summary>
            <param name="key">The name of the reference, it can be used as shorthand
            within other formulas.</param>
            <param name="formula">The formula string that the named reference represents.
            </param>
            <remarks>
            <p class="body">Named references may be either categorized or uncategorized.
            Specifying a <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Category"/> for a named reference allows it to be
            better organized within the design-time environment.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a categorized named reference.
            </summary>
            <param name="key">The name of the reference, it can be used as shorthand
            within other formulas.</param>
            <param name="formula">The formula string that the named reference represents.
            </param>
            <param name="category">The category under which this named reference shall
            appear within the designer.</param>
            <remarks>
            <p class="body">Named references may be either categorized or uncategorized.
            Specifying a <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Category"/> for a named reference allows it to be
            better organized within the design-time environment.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.CompileFormula">
            <summary>
            Compiles the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Formula"/> defined for this named reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.OnLoadViewState(System.Object)">
            <summary>
            Called when the viewstate is being loaded on the _CALCMANAGER_.
            </summary>
            <param name="savedState">An object containing state information
            that has been rehydrated from the persistence medium.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.OnSaveViewState">
            <summary>
            Called when the viewstate is being saved from the _CALCMANAGER_.
            </summary>
            <returns>An object containing state information
            that will be hydrated onto the persistence medium.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.OnTrackViewState(System.Boolean)">
            <summary>
            Called when the viewstate tracking is activated for the _CALCMANAGER_.
            </summary>
            <param name="oldTrackingState">The state of <see cref="!:IsTrackingViewState"/>
            prior to <see cref="!:TrackViewState"/> having been called, for informational
            purposes.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            This notification occurs when the NamedReference is added to a collection.
            </summary>
            <param name="primaryCollection">
            Parent collection from which the NamedReference was added.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            This notification occurs when the NamedReference is removed from a collection.
            </summary>
            <param name="primaryCollection">
            Parent collection from which the NamedReference was removed.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Reset">
            <summary>
            Resets this named reference to its default property values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.ToString">
            <summary>
            Converts the named reference to a string representation.
            </summary>
            <returns>The <b>Key</b> and <b>Formula</b> of the named reference formatted into a string.</returns>
            <remarks>
            <p class="body">This method provides a design-time textual representation of the named
            reference, and/or supports diagnostic instrumentation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Formula">
            <summary>
            The formula that this named reference represents.
            </summary>
            <remarks>
            <p class="body">Named references are shorthand for formulas.  Developers may
            assign a lengthy <b>Formula</b> string to this property, and then use the
            much shorter <b>Key</b> name they've assigned to this named reference to
            refer to it within other formulas.</p>
            <p class="body">The <b>Formula</b> property will be used to calculate a value
            to be returned by the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.FormulaResult"/> property of the <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>.
            This calculated <b>FormulaResult</b> is used anywhere the named reference appears
            in another formula expression within the same calculation network.</p>
            <p class="body">An example of a named reference is a constant.  For example,
            the named reference "PI" could have an underlying <b>Formula</b> value of
            22/7.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Category">
            <summary>
            The category under which this named reference appears in the design-time environment.
            </summary>
            <remarks>
            <p class="body">Category is used to organize NamedReferences into groups in the Formula designer.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.FormulaResult">
            <summary>
            Gets the value which will be used as the source in any calculations involving the named reference.
            </summary>
            <remarks>
            <p class="body">Value returns the current value that any calculations referencing the named reference use.  If the named reference is the target of a formula, then this will be the last calculated value.</p>
            <p class="note">Note that the value may be an <see cref="!:Infragistics.CalcEngine.UltraCalcErrorValue">UltraCalcErrorValue.</see></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Infragistics#WebUI#CalcEngine#IFormulaProvider#CalcManager">
            <summary>
            Returns the _CALCMANAGER_ associated with the named reference participating
            in the UltraCalc network through this <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/> instance.
            </summary>
            <remarks>
            <p class="body">This property is only intended for use at design-time. It is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Infragistics#WebUI#CalcEngine#IFormulaProvider#Participant">
            <summary>
            Returns the participant.
            </summary>
            <value>This property always returns null (Nothing in Visual Basic .NET).</value>
            <remarks>
            <p class="body">This property is not used by <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Infragistics#WebUI#CalcEngine#IFormulaProvider#Reference">
            <summary>
            Associated UltraCalc reference object.
            </summary>
            <remarks>
            <p class="body">In the case of an named reference, this will be a proxy <b>IUltraCalcReference</b>
            implementation that <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/> binds to it's <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.FormulaResult"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.IsEmpty">
            <summary>
            Indicates whether this is an unnamed empty reference.
            </summary>
            <remarks>
            <p class="body">Unnamed, empty references are prohibited from being added
            to the <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection"/>.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Key" -->
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.ParentCollection">
            <summary>
            Retrieves the parent collection containing this named reference.
            </summary>
            <remarks>
            <p class="body">The <b>ParentCollection</b> returned should contain this <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>.</p>
            <seealso cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection"/>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference.NamedReferenceConverter">
            <summary>
            A <b>TypeConverter</b> providing type conversion services for
            instances of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.NamedReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReference.NamedReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection">
            <summary>
            Collection containing the <b>UltraWebCalcManager</b>'s <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/> objects.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Add(System.String,System.String)">
            <summary>
            Creates a new named reference with the specified key and formula, then adds it directly
            to the collection.
            </summary>
            <param name="namedReferenceKey">Key naming the new <b>NamedReference</b> instance.</param>
            <param name="formula">The formula (or constant) to be referenced by this name.</param>
            <returns>Returns the newly created <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/> instance.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Add(Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Adds an existing named reference into the collection.
            </summary>
            <param name="namedReference">The named reference instance to add to this collection.</param>
            <returns>Returns the index of the NamedReference added into the collection.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when
            <i>namedReference</i> is null (or Nothing in Visual Basic .NET).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the <i>namedReference</i>
            already has a <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.ParentCollection">ParentCollection</see>.
            It is invalid for <i>namedReference</i> to belong to more than one 
            <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection"/> at any time, or to be added
            to the same collection multiple times.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Inserts a new NamedReference at the specified index.
            </summary>
            <param name="namedReference">The NamedReference to Insert</param>
            <param name="index">The Index at which to insert the item</param>
            <exception cref="T:System.ArgumentNullException">Thrown when
            <i>namedReference</i> is null (or Nothing in Visual Basic .NET).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the <i>namedReference</i>
            already has a <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.ParentCollection">ParentCollection</see>.
            It is invalid for <i>namedReference</i> to belong to more than one 
            <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection"/> at any time, or to be inserted
            into the same collection multiple times.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Remove(System.String)">
            <summary>
            Removes the named reference with the specified key from the collection.
            </summary>
            <param name="namedReferenceKey">The key of the named reference to be removed.</param>
            <exception cref="T:System.ArgumentException">Thrown when no named reference with
            the <b>Key</b> of <i>namedReferenceKey</i> exists within this collection.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Remove(Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Removes the specified NamedReference from the collection.
            </summary>
            <param name="namedReference"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the named reference at the specified position of the collection.
            </summary>
            <param name="index">A zero-based index identifying a position within the
            collection of a named reference that needs to be removed.</param>
            <remarks>
            <p class="body">All named references at positions greater than <i>index</i>
            are bumped down one position to fill the vacancy left by the removal.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Clear">
            <summary>
            Removes all named references from the collection.
            </summary>
            <remarks>
            <p class="body">After calling this method, the named references collection
            shall be empty.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.AddRange(System.Object[])">
            <summary>
            Adds a range of named references.
            </summary>
            <remarks>
            <p class="body">This method is intended to provide support for serialization
            and deserialization only.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.OnLoad">
            <summary>
            This notification is passed onto the Named References Collection
            by its <b>Owner</b> when the <b>Load</b> event has fired signaling
            all elements have been loaded and should be available for referencing.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.OnLoadViewState(System.Object)">
            <summary>
            Called when the viewstate is being loaded on the _CALCMANAGER_.
            </summary>
            <param name="savedState">An object containing state information
            that has been rehydrated from the persistence medium.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.OnSaveViewState">
            <summary>
            Called when the viewstate is being saved from the _CALCMANAGER_.
            </summary>
            <returns>An object containing state information
            that will be hydrated onto the persistence medium.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.OnTrackViewState(System.Boolean)">
            <summary>
            Called when the viewstate tracking is activated for the _CALCMANAGER_.
            </summary>
            <param name="oldTrackingState">The state of <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.IsTrackingViewState"/>
            prior to <see cref="!:TrackViewState"/> having been called, for informational
            purposes.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.AllowDuplicateKeys">
            <summary>
            Indicates if this collection permits objects with keys that are not unique within the collection.
            </summary>
            <value>
            Always returns true, since it is the Web developer's responsibility to ensure that the collection of named references never contains two references with the same name.
            </value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.AllowEmptyKeys">
            <summary>
            Indicates if this collection permits anonymous objects without a key.
            </summary>
            <value>
            Always returns false since the collection of named references cannot allow unnamed references to be added.
            </value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.CalcManager">
            <summary>
            The UltraWebCalcManager that the current named references collection belongs to.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.Item(System.Int32)">
            <summary>
            Gets the named reference at the specified location in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection.
            </summary>
            <value>
            Returns the number of named references this collection was allocated to contain.
            </value>
            <remarks>
            <p class="body">If the collection is not <b>IsFixedSize</b> then the collection may grow to</p>
            contain a larger number of items than it's <b>InitialCapacity.</b>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.IsReadOnly">
            <summary>
            Overriden.  Indicates whether this collection should be treated as if it were read-only.
            </summary>
            <value>
            Always returns false since the collection of named references is not read-only.
            </value>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.NamedReferencesCollectionConverter">
            <summary>
            A <b>TypeConverter</b> providing type conversion services for
            instances of <see cref="T:Infragistics.WebUI.UltraWebCalcManager.NamedReference"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.NamedReferencesCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.NamedReferencesCollection.NamedReferencesCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name.
            </summary>
            <param name="value">Locale-neutral name of a category to retrieve.</param>
            <returns>Text value naming the localized category.</returns>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager">
            <summary>
            Manages the provision of UltraCalc formula calculations in other extended web elements
            on it's page.
            </summary>
            <remarks>
            <p class="body">Developers can drag the <b>_CALCMANAGER_</b> from the toolbox in
            their IDE onto the design view to enable UltraCalc functionality to any controls
            on the page. A placeholder will appear on the page at design-time only.</p>
            <p class="body">The <b>_CALCMANAGER_</b> serves as the bridge connecting any
            <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemWebUIControlClassTopic.htm">Control</a>
            elements on an ASP.NET <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemWebUIPageClassTopic.htm">Page</a>
            with the Calc Engine. All communication between participating calculable elements (called
            "references" because they implement, directly or indirectly, the <b>IUltraCalcReference</b>
            interface) and the engine takes place through the <b>IUltraCalcManager</b> interface. This
            design permits <b>Control</b> instances that may not depend on the Calc Engine to take full
            advantage of it's features.</p>
            <p class="body">During run-time, developers may manually <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc"/> the
            calculation network through the <b>_CALCMANAGER_</b>, or this will be accomplished
            automatically when references have been added to or removed from the calculation
            network and values have changed.</p>
            <p class="body">Developers are encouraged to temporarily disable recalculations
            while adding (or removing) a large batch of references at one time, using <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendCalc"/>,
            and then re-enable calculations with <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc"/>.</p>
            <p class="body">The <b>_CALCMANAGER_</b> element also exposes two collections that help
            developers take immediate advantage of some of the Calc Engine's features. These are the
            <see cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/> collection and the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalcSettingsCollection"/>.</p>
            <p class="body">The <b>NamedReferences</b> collection lets developers assign meaningful
            names to represent formulas (that may combine values from one or more other references).
            An example of where a <i>named reference</i> would be useful is Ohm's Law to calculate
            the <i>voltage</i> based on <i>current</i> and <i>resistance</i> values specified by
            other elements on the <b>Page</b>. In this example, "Voltage" would be the name of the
            reference, and it's <see cref="P:Infragistics.WebUI.UltraWebCalcManager.NamedReference.Formula">Formula</see> would refer to a
            "Current" reference multiplied by a "Resistance" reference. The Calc Engine will update
            the value of this <b>NamedReference</b> whenever either of the other two references'
            values change.  Named references are always rooted at the <b>_CALCMANAGER_</b> (they
            are not contained in other references), so the UltraCalc reference name in the example
            would be "//Voltage" where the "//" in the grammar represents the root.</p>
            <p class="body">The <b>CalcSettingsCollection</b> contains a proxy for every extended,
            calculable element on the <b>Page</b>.  These <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> identify one
            simple, bindable property on a calculable element that is to serve as either the source
            of a value within a calculation, or as the recipient of a formula result.  By default,
            these extended properties should appear on calculable elements at design-time, but if
            it's necessary to manipulate any of these settings at run-time then developers will
            find the proxy objects encapsulating the additional information attached to calculable
            elements in this collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.#ctor">
            <summary>
            _CALCMANAGER_ default constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            _CALCMANAGER_ constructor taking an IContainer within which the calculation
            manager resides.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Dispose">
            <summary>
            Disposes of resources held by the _CALCMANAGER_.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Calculate(System.String)" -->
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ShouldSerializeNamedReferences">
            <summary>
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/> property needs to be serialized.
            </summary>
            <returns>True if the <b>NamedReferences</b> collection exists and contains any items.</returns>
            <seealso cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResetNamedReferences">
            <summary>
            Clears the contents of the <see cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/> property.
            </summary>
            <seealso cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
            <summary>
            Indicates which controls can have a CalcSettings extender property.
            </summary>
            <param name="extendee">Object to check if it can be extended.</param>
            <returns>True if the control can have a CalcSettings property.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.DirtyAllFormulas">
            <summary>
            Dirties all the formulas so they get recalculated.
            </summary>
            <remarks>
            <seealso cref="!:SuspendProcessingNotifications"/>
            <seealso cref="!:ResumeProcessingNotifications"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NotifyValueChanged(System.Web.UI.Control)">
            <summary>
            Notifies the _CALCMANAGER_ that the value of a calculable control used by a formula has changed. 
            </summary>
            <param name="control">The calculable <b>Control</b> whose value has changed.</param>
            <remarks>
            <p class="body">This method allows the developer to manually mark the <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> of
            calculable control as dirty.  When the property that provides the value (as specified in 
            <see cref="P:Infragistics.WebUI.UltraWebCalcManager.CalcSettings.PropertyName">PropertyName</see>) has a corresponding 
            <b><i>Property</i>Changed</b> event, then the _CALCMANAGER_ automatically hooks into
            and receives this property changed notification and calling this method is unnecessary.</p>
            <p>For example, if the <b>PropertyName</b> is "Text", _CALCMANAGER_ will hook the "TextChanged"
            event. If no such event exists on the control, then the calculation engine is unable to detect
            a change in the <b>Text</b> of the control.  Therefore, the application must call
            <b>NotifyValueChanged</b> when it detects that the <b>Text</b> of this calculable
            control has become dirty so formulas that depend upon it's value can be refreshed.</p>
            <p class="body">Additionally, when a calculable control receives a formula result as it's
            value, and is not serving as the source, this notification is also unneccessary.</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <p class="body">Thrown when <i>control</i> does not correspond to any of the UltraCalc-extended
            elements within the calculation network. Perhaps <i>control</i> comes from a foreign form
            or container that lies outside the scope of the current _CALCMANAGER_.</p>
            <p class="body">If <i>control</i> was dynamically created at run-time, it may not possess a
            corresponding <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> that creates an <b>IUltraCalcReference</b> proxy to
            represent it within the calculation network. In these situations, developers must request a
            <b>CalcSettings</b> be created by calling <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.GetCalcSettings(System.Web.UI.Control)"/> and passing <i>control</i>
            before they notify the _CALCMANAGER_ of a value change with this method.</p>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <p class="body">Thrown when <i>control</i> is specified as null (or Nothing in Visual Basic .NET).</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnCalcEngineDirtyValue(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ValueDirtied"/> event.
            </summary>
            <param name="e">An instance of <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs"/> describing
            the value that has been dirtied.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnCalcEngineRecalcValue(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)">
            <summary>
            Fires the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnCalcEngineRecalcValue(Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs)"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnCalculationsCompleted(System.EventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalculationsCompleted"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnFormatValue(Infragistics.WebUI.UltraWebCalcManager.FormatValueEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormatValue"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnFormulaCalculationError(Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaCalculationError"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnFormulaCircularityError(Infragistics.WebUI.UltraWebCalcManager.FormulaCircularityErrorEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaCircularityError"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnFormulaReferenceError(Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaReferenceError"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnFormulaSyntaxError(Infragistics.WebUI.UltraWebCalcManager.FormulaSyntaxErrorEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaSyntaxError"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnInit(System.EventArgs)">
            <summary>
            Called when the Init event of the _CALCMANAGER_ component occurs.
            </summary>
            <param name="args">Arguments for the init event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnLoad(System.EventArgs)">
            <summary>
            Called when the Load event of the _CALCMANAGER_ component occurs.
            </summary>
            <param name="args">Arguments for the load event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnParseValue(Infragistics.WebUI.UltraWebCalcManager.ParseValueEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ParseValue"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnLoadViewState(System.Object)">
            <summary>
            Called when the viewstate is being loaded on the _CALCMANAGER_.
            </summary>
            <param name="savedState">An object containing state information
            that has been rehydrated from the persistence medium.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnNamedReferenceResultChanged(Infragistics.WebUI.UltraWebCalcManager.NamedReferenceResultChangedEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferenceResultChanged"/> event.
            </summary>
            <param name="args">Arguments for the <b>NamedReferenceResultChanged</b> event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnSaveViewState">
            <summary>
            Called when the viewstate is being saved from the _CALCMANAGER_.
            </summary>
            <returns>An object containing state information
            that will be hydrated onto the persistence medium.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnTrackViewState(System.Boolean)">
            <summary>
            Called when the viewstate tracking is activated for the _CALCMANAGER_.
            </summary>
            <param name="oldTrackingState">The state of <see cref="!:IsTrackingViewState"/>
            prior to <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.TrackViewState"/> having been called, for informational
            purposes.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.OnValueDirtied(Infragistics.WebUI.UltraWebCalcManager.ValueDirtiedEventArgs)">
            <summary>
            Fires the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ValueDirtied"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc">
            <summary>
            Forces recalculation of all dirtied items in the Calculation Network.
            </summary>
            <returns>Returns a boolean indicating if anything in the calculation network remains dirty.</returns>
            <remarks>
            <p class="body">Developers can use this method to manually perform a synchronous recalculation.
            The calculation engine will consume as much time as necessary to completely recalculate all dirty
            items; however it's possible error conditions raised as events during the calculation might prevent
            the calculation from being completed without application intervention.</p>
            <p class="body">Calling this method synchronously may lead to a lack of UI interactivity when there
            are substantial recalculations to be performed (for instance, when the calculation engine first
            initializes calculated values within the grid), for which use of the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc(System.Int64)"/>
            method is prescribed. The intention of this method is to allow developers to implement an 
            <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconasynchronousdesignpatternoverview.htm">asynchronous design pattern</a>
            with <b>BeginInvoke</b> and <b>EndInvoke</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc(System.Int64)">
            <summary>
            Forces recalculation of all dirtied items in the Calculation Network.
            </summary>
            <param name="millis">Number of milliseconds to allow for calculations before control returns to the caller (-1 indicates to wait indefinitely.)</param>
            <returns>Returns a boolean indicating if anything in the calculation network remains dirty.</returns>
            <remarks>
            <p class="body">Developers can use this method to limit the amount of time in the time slice _CALCMANAGER_ spends
            performing it's calculations.  If all calculations have been completed before this time interval elapses, control
            returns immediately to the caller.  Setting this interval too small can lead to excessive task-switching that
            would make the calculation complete more slowly than it ordinarily would have completed, therefore developers
            are advised to allot as much time as the user-responsiveness of the application permits.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc"/>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the value supplied for <i>millis</i>
            is either less than -1, or too great to convert into a number of clock ticks.  The precise upper bound
            of <i>millis</i> may vary depending upon the granularity of the machine's hardware clock, but it exceeds
            any amount of time which would be a sensible argument (instead, use -1 to indicate an indefinite wait).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render this control to the output parameter specified.
            </summary>
            <param name="output">
            An HTML writer into which the resulting response is written.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.RegisterUserDefinedFunction(Infragistics.WebUI.CalcEngine.UltraCalcFunction)">
            <summary>
            Registers an individual <b>UltraCalcFunction</b> with the calculation engine.
            </summary>
            <param name="userDefinedFunction">User-defined function instance to register.</param>
            <returns>Returns true if the type was registered successfully, else false if the registration failed.</returns>
            <remarks>
            <p class="body">Developers can build custom functions for use within their formula expressions by sub-classing the <b>UltraCalcFunction</b> class.</p>
            <p class="body">Once the derived class is instantiated, it must be registered by using this method before it becomes available to formulas.</p>
            <p class="body">Developers can build libraries of functions packaged into an assembly, and register all <b>UltraCalcFunction</b> subclasses within that assembly by using the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)"/> method.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)">
            <summary>
            Registers an assembly containing one or more <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction"/> types as a user-defined function library.
            </summary>
            <param name="assembly">A loaded assembly containing a library of user-defined functions.</param>
            <returns>Returns True if <i>assembly</i> was registered without error, otherwise it returns false if the registration attempt failed.</returns>
            <remarks>
            <p class="body">All types within the registered assembly are examined by reflection, and any type that derives from the <b>UltraCalcFunction</b> class is added to the list of functions available to UltraCalc formulas.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.RegisterUserDefinedFunction(Infragistics.WebUI.CalcEngine.UltraCalcFunction)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc">
            <summary>
            Resumes calculations that have been suspended.
            </summary>
            <remarks>
            <p class="body">If calculations haven't been suspended by a prior call made to
            <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendCalc"/>, then this method has no effect.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeNotificationProcessing(System.Boolean)">
            <summary>
            Resumes notification processing.
            </summary>
            <param name="dirtyAllFormulas">Indicates that all formulas in the calc network
            should be marked dirty and re-calculated.</param>
            <remarks>
            <p class="body">
            While notifications are suspended by the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendNotificationProcessing"/>
            method, the <b>_CALCMANAGER_</b> loses track of what effects these changes may have
            had on the dependencies between formulas. If any changes affecting the calc network
            have been made (including adding, removing, or changing any formula; and adding,
            removing or changing references, including inserting values that may indirectly
            affect the index of a reference within a range) then this method must be called
            with a true <i>dirtyAllFormulas</i> argument.</p>
            <p class="body">
            If the calc network has been affected by changes, and <i>dirtyAllFormulas</i> is
            not true when resuming notifications, then the expected consequences that can manifest
            themselves may include some references not being re-calculated, or some formulas
            indicating a result that may be based on old reference values. Developers should
            only indicate false for <i>dirtyAllFormulas</i> when they are absolutely certain
            their changes could not have affected the calc network.</p>
            <p class="body">
            Often it is faster to suspend notifications, make significant changes, and
            subsequently resume notifications by dirtying all formulas, than to make multiple
            changes with notifications ongoing. This method and <b>SuspendNotificationProcessing</b>
            exist to allow developers to determine for themselves when this trade-off is best
            made in their applications, and optimize performance accordingly.</p>
            <p class="body">Resuming notification processing also resumes all calculations, as if
            <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc"/> had been called.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.DirtyAllFormulas"/>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendNotificationProcessing"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendCalc">
            <summary>
            Suspends calculations until <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc"/> is called.
            </summary>
            <remarks>
            <p class="body">Calling <b>SuspendCalc</b> will temporarily suspend any automatic calculations performed by the <b>_CALCMANAGER_</b> until a subsequent call to <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc"/> is made. If this method has been called multiple times, then an equal number of calls to <b>ResumeCalc</b> are necessary to resume calculations.</p>
            <p class="note">Note that the suspension refers to automatic calculations only. This means that calculations that would normally be performed on a timer in Asynchronous mode or on a <b>ValueDirtied</b> notification in Synchronous mode (see <see cref="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalcFrequency"/>) will not be performed. Manually calling the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ReCalc"/> method will still force a calculation.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeCalc"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendNotificationProcessing">
            <summary>
            Suspends notification processing.
            </summary>
            <remarks>
            <p class="body">This method is typically used when developers are about to perform operations in
            UltraWebGrid causing a large number of calculation-related notifications to be raised.  Because
            the processing of a large number of notifications can add significant time to execute pending
            calculations, this method can be used to suspend these notifications temporarily.</p>
            <p class="body">An application must call <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeNotificationProcessing(System.Boolean)"/> to resume
            the notifications processing. Failure to process notifications can cause the _CALCMANAGER_
            to stop enqueing formulas that need to be recalculated, so developers calling 
            <b>ResumeNotificationProcessing</b> after making changes that impact formulas
            need to do so with it's <i>dirtyAllFormulas</i> parameter set to true.  This
            leads to all formulas being enqueued and properly recalculated.</p>
            <p class="body">Suspending notification processing also suspends all calculations, as if
            <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SuspendCalc"/> had been called.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.DirtyAllFormulas"/>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResumeNotificationProcessing(System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.GetCalcSettings(System.Web.UI.Control)">
            <summary>
            Gets the <b>CalcSettings</b> for the extended element specified.
            </summary>
            <param name="control">The web element to retrieve the <b>CalcSettings</b> instance of.</param>
            <returns>The <b>CalcSettings</b> instance responsible for acting as a bridge to the extended element within the calculation network.</returns>
            <remarks>
            <p class="body">This method creates a new <b>CalcSettings</b> instance for the <i>control</i>
            when one did not previously exist.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SetCalcSettings(System.Web.UI.Control,Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            This sets the <b>CalcSettings</b> extender property for the specified element.
            </summary>
            <param name="control">The element whose <b>CalcSettings</b> property is getting
            set.</param>
            <param name="calcSettings">An object that acts as a bridge between <i>control</i> and
            the calculation network, obtained by calling <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.GetCalcSettings(System.Web.UI.Control)"/> for the
            <i>control</i>.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ShouldSerializeCalcSettings(System.Web.UI.Control)">
            <summary>
            Indicates whether the <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> property contains data that needs to be serialized.
            </summary>
            <returns>Returns true if the <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> property needs to be serialized.</returns>
            <remarks>
            <p class="body">Use this method to determine if an <b>UltraCalcSettings</b> object has been created and contains data that needs to be serialized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ResetCalcSettings(System.Web.UI.Control)">
            <summary>
            Resets the UltraCalcSettings of the passed in control.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#AddReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Adds a reference (and associated formula, if any) to the calculation network.
            </summary>
            <param name="reference">An <b>IUltraCalcReference</b> that is to be connected
            into the calculation network.</param>
            <remarks>
            <p class="body">
            The <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> class provides support for simple, single-valued
            elements to effortlessly participate in the calculation network using a stock
            <see cref="!:UltraCalcReferenceProxy"/> instance. In many situations this support
            can be provided automatically, and developers do not need to call <b>AddReference</b>
            themselves.</p>
            <p class="body">
            More sophisticated elements (multi-value, non-control, or hierarchically-valued)
            require their own custom implementations of <b>IUltraCalcReference</b> to expose
            these complex values to UltraCalc.</p>
            <p class="body">
            In these applications, developers would call <b>AddReference</b> to add their own
            <i>references</i> into the calculation network so that they can supply values for
            formulas to evaluate, and/or have formula results assigned back to them.</p>
            <seealso cref="!:AddRowReference"/>
            <seealso cref="!:RemoveReference"/>
            <seealso cref="!:RemoveRowReference"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>reference</i> is
            passed-in as null (or Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#RemoveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Removes a reference (and associated formula, if any) from the calculation network.
            </summary>
            <param name="reference">An <b>IUltraCalcReference</b> that is to be removed from
            the calculation network.</param>
            <remarks>
            <p class="body">
            In an application having custom <b>IUltraCalcReference</b>s, developers would
            call <b>RemoveReference</b> to remove their own <i>references</i> from the
            calculation network. Upon removal, any remaining formulas in the calculation
            network that depend on the removed reference will evaluate to #REF! indicating
            it's dependent reference is no longer available.</p>
            <seealso cref="!:AddReference"/>
            <seealso cref="!:AddRowReference"/>
            <seealso cref="!:RemoveRowReference"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>reference</i> is
            passed-in as null (or Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#AddRowReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Adds an item reference (and associated formula, if any) to the calculation network.
            </summary>
            <param name="reference">An <b>IUltraCalcReference</b> that exists as one item
            in a collection of references.</param>
            <remarks>
            <p class="body"><b>AddRowReference</b> adds the specified reference to the calculation
            network.  This method should be used when adding a reference for an item that exists
            within a collection (an example is an <b>UltraGridRow</b>). All other items must use
            <see cref="!:AddReference"/>, instead.</p>
            <seealso cref="!:AddReference"/>
            <seealso cref="!:RemoveReference"/>
            <seealso cref="!:RemoveRowReference"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>reference</i> is passed-in
            as null (or Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#RemoveRowReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Removes an item reference (and associated formula, if any) from the calculation network.
            </summary>
            <param name="reference">An <b>IUltraCalcReference</b> that exists as one item
            in a collection of references to be removed.</param>
            <remarks>
            <p class="body"><b>RemoveRowReference</b> removes the specified reference from the
            calculation network.  This method should be used when removing collectible references
            added to the calculation network through <see cref="!:AddRowReference"/>.  For singular
            references that are not a part of a collection, <see cref="!:RemoveReference"/> must be
            used, instead.</p>
            <seealso cref="!:AddReference"/>
            <seealso cref="!:AddRowReference"/>
            <seealso cref="!:RemoveReference"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>reference</i> is passed-in
            as null (or Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#EnsureCalculated(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.Boolean)">
            <summary>
            Checks to see if a reference is dirty, and optionally waits for it to be recalculated.
            </summary>
            <param name="reference">Reference whose dirty state is requested.</param>
            <param name="shouldWait">Denotes whether a caller wants to wait until the reference has been recalculated synchronously.</param>
            <returns>True if the reference is dirty.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#AddFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Adds a compiled formula into the calculation network. 
            </summary>
            <param name="formula">A compiled instance of <b>IUltraCalcFormula</b>.</param>
            <remarks>
            <p class="body">There is no effect if <i>formula</i> has already
            been added to the calculation network. An exception is thrown if
            the formula contains a syntax error. However, if it contains a
            reference error, the formula can still be added to the calculation
            network.  This method throws an exception if the formula was
            compiled under a different <b>IUltraCalcManager</b> implementation.</p>
            <seealso cref="!:CompileFormula(IUltraCalcReference,string)"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>formula</i>
            is passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#RemoveFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Removes the specified formula from the calculation network.
            </summary>
            <param name="formula"></param>
            <remarks>
            <p class="body">This method has no effect if <i>formula</i> does not
            exist in the calculation network.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when the <i>formula</i>
            is passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#CompileFormula(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String)">
            <summary>
            Compiles the specified formula and returns an instance of <b>IUltraCalcFormula</b>
            representing the formula.
            </summary>
            <param name="baseReference">Base reference to use for any reference parsing.</param>
            <param name="formula">The UltraCalc formula string.</param>
            <returns>Returns an instance of <b>IUltraCalcFormula</b>.</returns>
            <remarks>
            <p class="body">Compiling a formula converts the in-fix expression string into an intermediate post-fix
            form optimized for run-time evaluation.</p>
            <p class="body"><b>IUltraCalcFormula</b> can be polled for information on any syntax or reference errors,
            or the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaSyntaxError"/> event raised when errors arise can be handled.</p>
            <p class="body">The formula instance makes use of <i>baseReference</i> when parsing and at evaluation-time
            to resolve relative references appearing within <i>formula</i>.</p>
            <p class="note">NOTE: This method does not add the formula to the calculation network, for that
            developers should call <see cref="!:_CALCMANAGER_.AddFormula">AddFormula</see>.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when either <i>baseReference</i> or
            <i>formula</i> are passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#CompileFormula(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String,System.Boolean)">
            <summary>
            Compiles the specified formula without raising errors, and when successful returns
            an instance of <b>IUltraCalcFormula</b> representing the formula.
            </summary>
            <param name="baseReference">Base reference to use for any reference parsing.</param>
            <param name="formula">The UltraCalc formula string.</param>
            <param name="suppressSyntaxErrorEvent">Indicates whether syntax errors should be suppressed.</param>
            <returns>Returns an instance of <b>IUltraCalcFormula</b>.</returns>
            <remarks>
            <p class="body">Compiling a formula converts the in-fix expression string into an intermediate post-fix
            form optimized for run-time evaluation.</p>
            <p class="body">If <i>suppressSyntaxErrorEvent</i> is false, then <b>IUltraCalcFormula</b> can be polled
            for the reason and/or location of any syntax or reference <see cref="!:UltraCalcFormula.Error">Error</see>
            happening during compilation.</p>
            <p class="body">The formula instance makes use of <i>baseReference</i> when parsing and at evaluation-time
            to resolve relative references appearing within <i>formula</i>.</p>
            <p class="note">NOTE: This method does not add the formula to the calculation network, for that
            developers should call <see cref="!:AddFormula"/>.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when either <i>baseReference</i> or
            <i>formula</i> are passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#NotifyValueChanged(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Notifies the _CALCMANAGER_ of a change in a reference's value.
            </summary>
            <param name="reference">The <b>IUltraCalcReference</b> that has
            had it's value change.</param>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NotifyValueChanged(System.Web.UI.Control)"/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>reference</i>
            is passed-in as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#GetReference(System.String)">
            <summary>
            Gets a reference by it's absolute name.
            </summary>
            <param name="name">An absolute (fully-specified) reference name.</param>
            <returns>
            The <b>IUltraCalcReference</b> identified by absolute name, <i>name</i>,
            or null (Nothing in Visual Basic .NET) when no such reference could be
            found.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#CalcEngine#IUltraCalcManager#RaiseFormulaError(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.Object,Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            Raises evaluation-time formula error events on the _CALCMANAGER_.
            </summary>
            <param name="reference">The <b>IUltraCalcReference</b> responsible for producing the error.</param>
            <param name="errorValue">A value compatible with the underlying storage type of the reference that
            is to be stored when an error occurs (<i>e.g.</i>, store 0 in an integer cell with an error).</param>
            <param name="errorInfo">An <b>UltraCalcErrorValue</b> describing the evaluation error that has
            occurred.</param>
            <remarks>
            <p class="body">The <i>errorInfo</i> argument is used to determine whether the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaCalculationError"/>
            or <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaReferenceError"/> is raised. If the actual error is not one of these formula evaluation-time
            errors, then the behavior of this method is undefined.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetAllFunctions">
            <summary>
            Gets the function descriptions for all categories.
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetFunctions(System.String)">
            <summary>
            Gets the function descriptions for the specified category.
            </summary>
            <param name="category">Case-sensitive name of the category
            of descriptions to retrieve.</param>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetReferenceTree">
            <summary>
            Gets the reference tree for use at design-time by the Designer.
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetUltraCalcReference(Infragistics.WebUI.UltraWebCalcManager.NamedReference)">
            <summary>
            Gets the <b>IUltraCalcReference</b> associated with a <b>NamedReference</b> to the Designer.
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetUltraCalcReference(Infragistics.WebUI.UltraWebCalcManager.CalcSettings)">
            <summary>
            Gets the <b>IUltraCalcReference</b> associated with an instance of <b>CalcSettings</b> to the Designer.
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetUnassignedFunctions">
            <summary>
            Gets the function descriptions for unassigned functions (functions which have no category).
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#UltraWebCalcManager#Design#IDesignInfo#GetUniqueFunctionCategories">
            <summary>
            Gets a list of categories based on all known functions both built-in and user-defined.
            </summary>
            <remarks>
            <p class="body">This method supports the internal Infragistics control infrastructure, and is not intended for use by applications.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalcFrequency" -->
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ContainingControl">
            <summary>
            Retrieves the Page or UserControl that this _CALCMANAGER_ element services.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.DeferredCalculationsEnabled">
            <summary>
            Indicates whether certain calculations can be deferred to optimize calculation of loaded rows.
            </summary>
            <remarks>
            <p class="body">When true, certain calculations may be deferred if the objects they reference are not in view. This applies to iterated calculation references only, such as UltraWebGrid rows. If possible, objects indicating that they are in-view will be calculated before objects that are out-of-view.</p>
            <p class="note">In some cases, deferring calculations is not possible. For example, if there is a footer on a column, then all the of the values in the column must have been calculated (and therefore cannot be deferred) before the footer value can be determined.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.EventManager">
            <summary>
            The object that enables, disables and controls firing of specific control events.
            </summary>
            <remarks>
            <p class="body">The <b>CalcManagerEventManager</b> gives you a high degree of control over how the component invokes event procedures. You can use it to selectively enable and disable event procedures depending on the context of your application. You can also use the event manager to return information about the state of the component's events.</p>
            <p class="body">The event manager's methods are used to determine the enabled state of an event (<see cref="!:Infragistics.Win.UltraWinCalcManager.CalcManagerEventManager.IsEnabled(CalcManagerEventIds)"/>), to selectively enable or disable events (<see cref="!:Infragistics.Win.UltraWinCalcManager.CalcManagerEventManager.SetEnabled(CalcManagerEventIds,bool)"/>), and to tell whether an event procedure is currently being processed (<see cref="!:Infragistics.Win.UltraWinCalcManager.CalcManagerEventManager.InProgress"/>). There is also an <seealso cref="!:Infragistics.Shared.EventManagerBase.AllEventsEnabled"/> property that you can check to quickly determine whether any events have been disabled by the event manager.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Infragistics#WebUI#Shared#IUltraLicensedComponent#License">
            <summary>
            Gets the license associated with this element.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferences">
            <summary>
            A collection of named references.
            </summary>
            <remarks>
            <p class="body">Named references are useful for creating formulas or constants that are used in other calculations, but which will not be displayed to the end user.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.Site">
            <summary>
            The component's site.
            </summary>
            <remarks>
            <p class="body">This property should be set by the design-time environment only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.IsInDesignMode">
            <summary>
            Identifies whether the _CALCMANAGER_ element is currently hosted in
            a design-time environment.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalculationsCompleted">
            <summary>
            Fired after all calculations are complete. 
            </summary>
            <remarks>
            <p class="body"><b>CalculationsCompleted</b> event is fired when all calculations are completed. In Asynchronous mode, this even will fire only when all calculations have been computed and no references are dirty.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormatValue">
            <summary>
            Fired before the <b>CalcSettings</b> applies a calculated formula result value onto an extended control.
            </summary>
            <remarks>
            <p class="body">The <b>FormatValue</b> event is fired any time a <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> is about to set a value on a control that is receiving the calculated result of a formula. The <b>Value</b> can then be modified by the application before it gets assigned to the control, with the intention of doing any necessary formatting, type conversion, <i>etc</i>.</p>
            </remarks>	
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaCircularityError">
            <summary>
            Fired any time a formula attempts to reference itself either directly or indirectly. 
            </summary>
            <remarks>
            <p class="body"><b>FormulaCircularityError</b> is fired any time a formula attempts to reference itself either directly or indirectly.</p>
            <p class="body">Circular references cannot be resolved by the _CALCMANAGER_ and so no calculations involving circular references will be performed.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaSyntaxError">
            <summary>
            Fired any time the attempt to calculate a formula results in an error. 
            </summary>
            <remarks>
            <p class="body"><b>FormulaSyntaxError</b> event is fired any time the attempt to calcuate a formula results in an error, whether it be a reference, syntax, or mathematical error..</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaReferenceError">
            <summary>
            Fired any time the attempt to calculate a formula results in an error. 
            </summary>
            <remarks>
            <p class="body"><b>FormulaReferenceError</b> event is fired any time the attempt to calcuate a formula results in an error, whether it be a reference, syntax, or mathematical error..</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormulaCalculationError">
            <summary>
            Fired any time the attempt to calculate a formula results in an error. 
            </summary>
            <remarks>
            <p class="body"><b>FormulaCalculationError</b> event is fired any time the attempt to calcuate a formula results in an error, whether it be a reference, syntax, or mathematical error..</p>
            </remarks>		
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.NamedReferenceResultChanged">
            <summary>
            Fired after the Value of a NamedReference has changed.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ParseValue">
            <summary>
            Fired when a <b>CalcSettings</b> instance retrieves a value from an extended control.
            </summary>
            <remarks>
            <p class="body"><b>ParseValue</b> event is fired any time a <see cref="T:Infragistics.WebUI.UltraWebCalcManager.CalcSettings"/> retrieves a value from a control.  The <b>Value</b> can then be modified by an application before it gets passed back into the _CALCMANAGER_ for the purposes of formatting, type conversion, <i>etc</i>.</p>
            <p class="note">Note that if a control is both the source and target of a formula, the <b>ParseValue</b> event will not fire because the _CALCMANAGER_ does not retrive the value from the control. Instead, the _CALCMANAGER_ uses the calculated result of the formula. This means that an extended control that is being used as both source and target of a formula can safely be formatted using the <see cref="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.FormatValue"/> event without the need to reverse the formatting.</p>
            </remarks>	
        </member>
        <member name="E:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.ValueDirtied">
            <summary>
            Fired when a value referenced by a Formula is made dirty.
            </summary>
            <remarks>
            <p class="body"><b>ValueDirtied</b> event is fired any time a value that is being used in a calculation is dirtied (changed). This even can be used in conjunction with a CalcFrequency setting of Manual to determine when to there are dirty calculations to be ReCalced.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.CalcSettingsCollection">
            <summary>
            Contains the <b>CalcSettings</b> objects associated with the WebCalcManager.
            </summary>
            <remarks>
            <p class="body">Developers should not need to interact directly with this
            container within their web applications. Instead, use the <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.GetCalcSettings(System.Web.UI.Control)"/>
            and <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraWebCalcManager.SetCalcSettings(System.Web.UI.Control,Infragistics.WebUI.UltraWebCalcManager.CalcSettings)"/> methods to manipulate the <b>CalcSettings</b>
            objects maintained within the WebCalcManager.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.RefNodeComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two <b>ReferenceNode</b> objects and returns an indication of whether one is less than,
            equal to or greater than the other.
            </summary>
            <param name="x">An object of type <b>ReferenceNode</b>.</param>
            <param name="y">Another object of type <b>ReferenceNode</b>.</param>
            <returns>Less than zero when <i>x</i> compares as less than <i>y</i>, zero when both <i>x</i> and <i>y</i>
            are equal, and greater than zero when <i>x</i> is greater than <i>y</i>.</returns>
            <exception cref="T:System.InvalidCastException">Thrown when <i>x</i> or <i>y</i> is not
            of type <b>ReferenceNode</b> or derived from type <b>ReferenceNode</b>.
            </exception>
            <exception cref="T:System.NullReferenceException">Thrown when <i>x</i> or <i>y</i> is
            null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.FunctionComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two <b>UltraCalcFunction</b> objects and returns an indication of whether one is less than,
            equal to or greater than the other.
            </summary>
            <param name="x">An object of type <b>UltraCalcFunction</b>.</param>
            <param name="y">Another object of type <b>UltraCalcFunction</b>.</param>
            <returns>Less than zero when <i>x</i> compares as less than <i>y</i>, zero when both <i>x</i> and <i>y</i>
            are equal, and greater than zero when <i>x</i> is greater than <i>y</i>.</returns>
            <exception cref="T:System.InvalidCastException">Thrown when <i>x</i> or <i>y</i> is not
            of type <b>UltraCalcFunction</b> or derived from type <b>UltraCalcFunction</b>.
            </exception>
            <exception cref="T:System.NullReferenceException">Thrown when <i>x</i> or <i>y</i> is
            null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.UltraCalcReferenceProxyBase">
            <summary>
            Summary description for UltraCalcReferenceProxy.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraCalcReferenceProxyBase.FindAll(System.String)">
            <summary>
            Returns the named reference relative to this reference with scope "All".
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element.</returns>
            <see cref="M:Infragistics.WebUI.UltraWebCalcManager.UltraCalcReferenceProxyBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.UltraCalcUserDefinedLibraryBase">
            <summary>
            Used as a base class for a component that registers all user defined function in an assembly.
            </summary>
            <remarks>
            Placing an instance of a class derived from this class on a form with an <see cref="!:_CALCMANAGER_"/> component 
            on it will cause all functions derived from <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcFunction">UltraCalcFunction</see> in the same assmbly to
            be registered with that _CALCMANAGER_. The registration happens automaticlly at both design- and run-time. 
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebCalcManager.UltraCalcUserDefinedLibraryBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraCalcUserDefinedLibraryBase.CalcManager">
            <summary>
            Gets/sets the <see cref="!:_CALCMANAGER_"/> implementation.
            </summary>
            <remarks>
            Setting this property will register user-defined functions in this assembly with the _CALCMANAGER_.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebCalcManager.UltraLicenseAttribute.LicensedWithProducts">
            <summary>
            Return the list of products that this control can be licensed with
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebCalcManager.UltraRefParser">
            <summary>
            Summary description for UltraRefParser.
            </summary>
        </member>
    </members>
</doc>
